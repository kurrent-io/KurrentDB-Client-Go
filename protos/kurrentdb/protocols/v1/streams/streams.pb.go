// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.0
// source: kurrentdb/protocols/v1/streams.proto

package streams

import (
	shared "github.com/kurrent-io/KurrentDB-Client-Go/protos/kurrentdb/protocols/v1/shared"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadReq_Options_ReadDirection int32

const (
	ReadReq_Options_Forwards  ReadReq_Options_ReadDirection = 0
	ReadReq_Options_Backwards ReadReq_Options_ReadDirection = 1
)

// Enum value maps for ReadReq_Options_ReadDirection.
var (
	ReadReq_Options_ReadDirection_name = map[int32]string{
		0: "Forwards",
		1: "Backwards",
	}
	ReadReq_Options_ReadDirection_value = map[string]int32{
		"Forwards":  0,
		"Backwards": 1,
	}
)

func (x ReadReq_Options_ReadDirection) Enum() *ReadReq_Options_ReadDirection {
	p := new(ReadReq_Options_ReadDirection)
	*p = x
	return p
}

func (x ReadReq_Options_ReadDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadReq_Options_ReadDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_kurrentdb_protocols_v1_streams_proto_enumTypes[0].Descriptor()
}

func (ReadReq_Options_ReadDirection) Type() protoreflect.EnumType {
	return &file_kurrentdb_protocols_v1_streams_proto_enumTypes[0]
}

func (x ReadReq_Options_ReadDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadReq_Options_ReadDirection.Descriptor instead.
func (ReadReq_Options_ReadDirection) EnumDescriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 0}
}

type ReadReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *ReadReq_Options       `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq) Reset() {
	*x = ReadReq{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq) ProtoMessage() {}

func (x *ReadReq) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq.ProtoReflect.Descriptor instead.
func (*ReadReq) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0}
}

func (x *ReadReq) GetOptions() *ReadReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type ReadResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*ReadResp_Event
	//	*ReadResp_Confirmation
	//	*ReadResp_Checkpoint_
	//	*ReadResp_StreamNotFound_
	//	*ReadResp_FirstStreamPosition
	//	*ReadResp_LastStreamPosition
	//	*ReadResp_LastAllStreamPosition
	//	*ReadResp_CaughtUp_
	//	*ReadResp_FellBehind_
	Content       isReadResp_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResp) Reset() {
	*x = ReadResp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp) ProtoMessage() {}

func (x *ReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp.ProtoReflect.Descriptor instead.
func (*ReadResp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1}
}

func (x *ReadResp) GetContent() isReadResp_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReadResp) GetEvent() *ReadResp_ReadEvent {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_Event); ok {
			return x.Event
		}
	}
	return nil
}

func (x *ReadResp) GetConfirmation() *ReadResp_SubscriptionConfirmation {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_Confirmation); ok {
			return x.Confirmation
		}
	}
	return nil
}

func (x *ReadResp) GetCheckpoint() *ReadResp_Checkpoint {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_Checkpoint_); ok {
			return x.Checkpoint
		}
	}
	return nil
}

func (x *ReadResp) GetStreamNotFound() *ReadResp_StreamNotFound {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_StreamNotFound_); ok {
			return x.StreamNotFound
		}
	}
	return nil
}

func (x *ReadResp) GetFirstStreamPosition() uint64 {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_FirstStreamPosition); ok {
			return x.FirstStreamPosition
		}
	}
	return 0
}

func (x *ReadResp) GetLastStreamPosition() uint64 {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_LastStreamPosition); ok {
			return x.LastStreamPosition
		}
	}
	return 0
}

func (x *ReadResp) GetLastAllStreamPosition() *shared.AllStreamPosition {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_LastAllStreamPosition); ok {
			return x.LastAllStreamPosition
		}
	}
	return nil
}

func (x *ReadResp) GetCaughtUp() *ReadResp_CaughtUp {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_CaughtUp_); ok {
			return x.CaughtUp
		}
	}
	return nil
}

func (x *ReadResp) GetFellBehind() *ReadResp_FellBehind {
	if x != nil {
		if x, ok := x.Content.(*ReadResp_FellBehind_); ok {
			return x.FellBehind
		}
	}
	return nil
}

type isReadResp_Content interface {
	isReadResp_Content()
}

type ReadResp_Event struct {
	Event *ReadResp_ReadEvent `protobuf:"bytes,1,opt,name=event,proto3,oneof"`
}

type ReadResp_Confirmation struct {
	Confirmation *ReadResp_SubscriptionConfirmation `protobuf:"bytes,2,opt,name=confirmation,proto3,oneof"`
}

type ReadResp_Checkpoint_ struct {
	Checkpoint *ReadResp_Checkpoint `protobuf:"bytes,3,opt,name=checkpoint,proto3,oneof"`
}

type ReadResp_StreamNotFound_ struct {
	StreamNotFound *ReadResp_StreamNotFound `protobuf:"bytes,4,opt,name=stream_not_found,json=streamNotFound,proto3,oneof"`
}

type ReadResp_FirstStreamPosition struct {
	FirstStreamPosition uint64 `protobuf:"varint,5,opt,name=first_stream_position,json=firstStreamPosition,proto3,oneof"`
}

type ReadResp_LastStreamPosition struct {
	LastStreamPosition uint64 `protobuf:"varint,6,opt,name=last_stream_position,json=lastStreamPosition,proto3,oneof"`
}

type ReadResp_LastAllStreamPosition struct {
	LastAllStreamPosition *shared.AllStreamPosition `protobuf:"bytes,7,opt,name=last_all_stream_position,json=lastAllStreamPosition,proto3,oneof"`
}

type ReadResp_CaughtUp_ struct {
	CaughtUp *ReadResp_CaughtUp `protobuf:"bytes,8,opt,name=caught_up,json=caughtUp,proto3,oneof"`
}

type ReadResp_FellBehind_ struct {
	FellBehind *ReadResp_FellBehind `protobuf:"bytes,9,opt,name=fell_behind,json=fellBehind,proto3,oneof"`
}

func (*ReadResp_Event) isReadResp_Content() {}

func (*ReadResp_Confirmation) isReadResp_Content() {}

func (*ReadResp_Checkpoint_) isReadResp_Content() {}

func (*ReadResp_StreamNotFound_) isReadResp_Content() {}

func (*ReadResp_FirstStreamPosition) isReadResp_Content() {}

func (*ReadResp_LastStreamPosition) isReadResp_Content() {}

func (*ReadResp_LastAllStreamPosition) isReadResp_Content() {}

func (*ReadResp_CaughtUp_) isReadResp_Content() {}

func (*ReadResp_FellBehind_) isReadResp_Content() {}

type AppendReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*AppendReq_Options_
	//	*AppendReq_ProposedMessage_
	Content       isAppendReq_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendReq) Reset() {
	*x = AppendReq{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq) ProtoMessage() {}

func (x *AppendReq) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq.ProtoReflect.Descriptor instead.
func (*AppendReq) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{2}
}

func (x *AppendReq) GetContent() isAppendReq_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AppendReq) GetOptions() *AppendReq_Options {
	if x != nil {
		if x, ok := x.Content.(*AppendReq_Options_); ok {
			return x.Options
		}
	}
	return nil
}

func (x *AppendReq) GetProposedMessage() *AppendReq_ProposedMessage {
	if x != nil {
		if x, ok := x.Content.(*AppendReq_ProposedMessage_); ok {
			return x.ProposedMessage
		}
	}
	return nil
}

type isAppendReq_Content interface {
	isAppendReq_Content()
}

type AppendReq_Options_ struct {
	Options *AppendReq_Options `protobuf:"bytes,1,opt,name=options,proto3,oneof"`
}

type AppendReq_ProposedMessage_ struct {
	ProposedMessage *AppendReq_ProposedMessage `protobuf:"bytes,2,opt,name=proposed_message,json=proposedMessage,proto3,oneof"`
}

func (*AppendReq_Options_) isAppendReq_Content() {}

func (*AppendReq_ProposedMessage_) isAppendReq_Content() {}

type AppendResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*AppendResp_Success_
	//	*AppendResp_WrongExpectedVersion_
	Result        isAppendResp_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendResp) Reset() {
	*x = AppendResp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp) ProtoMessage() {}

func (x *AppendResp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp.ProtoReflect.Descriptor instead.
func (*AppendResp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{3}
}

func (x *AppendResp) GetResult() isAppendResp_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AppendResp) GetSuccess() *AppendResp_Success {
	if x != nil {
		if x, ok := x.Result.(*AppendResp_Success_); ok {
			return x.Success
		}
	}
	return nil
}

func (x *AppendResp) GetWrongExpectedVersion() *AppendResp_WrongExpectedVersion {
	if x != nil {
		if x, ok := x.Result.(*AppendResp_WrongExpectedVersion_); ok {
			return x.WrongExpectedVersion
		}
	}
	return nil
}

type isAppendResp_Result interface {
	isAppendResp_Result()
}

type AppendResp_Success_ struct {
	Success *AppendResp_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_ struct {
	WrongExpectedVersion *AppendResp_WrongExpectedVersion `protobuf:"bytes,2,opt,name=wrong_expected_version,json=wrongExpectedVersion,proto3,oneof"`
}

func (*AppendResp_Success_) isAppendResp_Result() {}

func (*AppendResp_WrongExpectedVersion_) isAppendResp_Result() {}

type BatchAppendReq struct {
	state            protoimpl.MessageState            `protogen:"open.v1"`
	CorrelationId    *shared.UUID                      `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Options          *BatchAppendReq_Options           `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	ProposedMessages []*BatchAppendReq_ProposedMessage `protobuf:"bytes,3,rep,name=proposed_messages,json=proposedMessages,proto3" json:"proposed_messages,omitempty"`
	IsFinal          bool                              `protobuf:"varint,4,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchAppendReq) Reset() {
	*x = BatchAppendReq{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAppendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAppendReq) ProtoMessage() {}

func (x *BatchAppendReq) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAppendReq.ProtoReflect.Descriptor instead.
func (*BatchAppendReq) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{4}
}

func (x *BatchAppendReq) GetCorrelationId() *shared.UUID {
	if x != nil {
		return x.CorrelationId
	}
	return nil
}

func (x *BatchAppendReq) GetOptions() *BatchAppendReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *BatchAppendReq) GetProposedMessages() []*BatchAppendReq_ProposedMessage {
	if x != nil {
		return x.ProposedMessages
	}
	return nil
}

func (x *BatchAppendReq) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type BatchAppendResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId *shared.UUID           `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*BatchAppendResp_Error
	//	*BatchAppendResp_Success_
	Result           isBatchAppendResp_Result `protobuf_oneof:"result"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,4,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to ExpectedStreamPosition:
	//
	//	*BatchAppendResp_StreamPosition
	//	*BatchAppendResp_NoStream
	//	*BatchAppendResp_Any
	//	*BatchAppendResp_StreamExists
	ExpectedStreamPosition isBatchAppendResp_ExpectedStreamPosition `protobuf_oneof:"expected_stream_position"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BatchAppendResp) Reset() {
	*x = BatchAppendResp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAppendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAppendResp) ProtoMessage() {}

func (x *BatchAppendResp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAppendResp.ProtoReflect.Descriptor instead.
func (*BatchAppendResp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{5}
}

func (x *BatchAppendResp) GetCorrelationId() *shared.UUID {
	if x != nil {
		return x.CorrelationId
	}
	return nil
}

func (x *BatchAppendResp) GetResult() isBatchAppendResp_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchAppendResp) GetError() *status.Status {
	if x != nil {
		if x, ok := x.Result.(*BatchAppendResp_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *BatchAppendResp) GetSuccess() *BatchAppendResp_Success {
	if x != nil {
		if x, ok := x.Result.(*BatchAppendResp_Success_); ok {
			return x.Success
		}
	}
	return nil
}

func (x *BatchAppendResp) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *BatchAppendResp) GetExpectedStreamPosition() isBatchAppendResp_ExpectedStreamPosition {
	if x != nil {
		return x.ExpectedStreamPosition
	}
	return nil
}

func (x *BatchAppendResp) GetStreamPosition() uint64 {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendResp_StreamPosition); ok {
			return x.StreamPosition
		}
	}
	return 0
}

func (x *BatchAppendResp) GetNoStream() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendResp_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *BatchAppendResp) GetAny() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendResp_Any); ok {
			return x.Any
		}
	}
	return nil
}

func (x *BatchAppendResp) GetStreamExists() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendResp_StreamExists); ok {
			return x.StreamExists
		}
	}
	return nil
}

type isBatchAppendResp_Result interface {
	isBatchAppendResp_Result()
}

type BatchAppendResp_Error struct {
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type BatchAppendResp_Success_ struct {
	Success *BatchAppendResp_Success `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

func (*BatchAppendResp_Error) isBatchAppendResp_Result() {}

func (*BatchAppendResp_Success_) isBatchAppendResp_Result() {}

type isBatchAppendResp_ExpectedStreamPosition interface {
	isBatchAppendResp_ExpectedStreamPosition()
}

type BatchAppendResp_StreamPosition struct {
	StreamPosition uint64 `protobuf:"varint,5,opt,name=stream_position,json=streamPosition,proto3,oneof"`
}

type BatchAppendResp_NoStream struct {
	NoStream *emptypb.Empty `protobuf:"bytes,6,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type BatchAppendResp_Any struct {
	Any *emptypb.Empty `protobuf:"bytes,7,opt,name=any,proto3,oneof"`
}

type BatchAppendResp_StreamExists struct {
	StreamExists *emptypb.Empty `protobuf:"bytes,8,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*BatchAppendResp_StreamPosition) isBatchAppendResp_ExpectedStreamPosition() {}

func (*BatchAppendResp_NoStream) isBatchAppendResp_ExpectedStreamPosition() {}

func (*BatchAppendResp_Any) isBatchAppendResp_ExpectedStreamPosition() {}

func (*BatchAppendResp_StreamExists) isBatchAppendResp_ExpectedStreamPosition() {}

type DeleteReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *DeleteReq_Options     `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReq) GetOptions() *DeleteReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type DeleteResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to PositionOption:
	//
	//	*DeleteResp_Position_
	//	*DeleteResp_NoPosition
	PositionOption isDeleteResp_PositionOption `protobuf_oneof:"position_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteResp) Reset() {
	*x = DeleteResp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp) ProtoMessage() {}

func (x *DeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp.ProtoReflect.Descriptor instead.
func (*DeleteResp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteResp) GetPositionOption() isDeleteResp_PositionOption {
	if x != nil {
		return x.PositionOption
	}
	return nil
}

func (x *DeleteResp) GetPosition() *DeleteResp_Position {
	if x != nil {
		if x, ok := x.PositionOption.(*DeleteResp_Position_); ok {
			return x.Position
		}
	}
	return nil
}

func (x *DeleteResp) GetNoPosition() *shared.Empty {
	if x != nil {
		if x, ok := x.PositionOption.(*DeleteResp_NoPosition); ok {
			return x.NoPosition
		}
	}
	return nil
}

type isDeleteResp_PositionOption interface {
	isDeleteResp_PositionOption()
}

type DeleteResp_Position_ struct {
	Position *DeleteResp_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type DeleteResp_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,2,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*DeleteResp_Position_) isDeleteResp_PositionOption() {}

func (*DeleteResp_NoPosition) isDeleteResp_PositionOption() {}

type TombstoneReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Options       *TombstoneReq_Options  `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TombstoneReq) Reset() {
	*x = TombstoneReq{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TombstoneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneReq) ProtoMessage() {}

func (x *TombstoneReq) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneReq.ProtoReflect.Descriptor instead.
func (*TombstoneReq) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{8}
}

func (x *TombstoneReq) GetOptions() *TombstoneReq_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type TombstoneResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to PositionOption:
	//
	//	*TombstoneResp_Position_
	//	*TombstoneResp_NoPosition
	PositionOption isTombstoneResp_PositionOption `protobuf_oneof:"position_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TombstoneResp) Reset() {
	*x = TombstoneResp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TombstoneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneResp) ProtoMessage() {}

func (x *TombstoneResp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneResp.ProtoReflect.Descriptor instead.
func (*TombstoneResp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{9}
}

func (x *TombstoneResp) GetPositionOption() isTombstoneResp_PositionOption {
	if x != nil {
		return x.PositionOption
	}
	return nil
}

func (x *TombstoneResp) GetPosition() *TombstoneResp_Position {
	if x != nil {
		if x, ok := x.PositionOption.(*TombstoneResp_Position_); ok {
			return x.Position
		}
	}
	return nil
}

func (x *TombstoneResp) GetNoPosition() *shared.Empty {
	if x != nil {
		if x, ok := x.PositionOption.(*TombstoneResp_NoPosition); ok {
			return x.NoPosition
		}
	}
	return nil
}

type isTombstoneResp_PositionOption interface {
	isTombstoneResp_PositionOption()
}

type TombstoneResp_Position_ struct {
	Position *TombstoneResp_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type TombstoneResp_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,2,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*TombstoneResp_Position_) isTombstoneResp_PositionOption() {}

func (*TombstoneResp_NoPosition) isTombstoneResp_PositionOption() {}

type ReadReq_Options struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StreamOption:
	//
	//	*ReadReq_Options_Stream
	//	*ReadReq_Options_All
	StreamOption  isReadReq_Options_StreamOption `protobuf_oneof:"stream_option"`
	ReadDirection ReadReq_Options_ReadDirection  `protobuf:"varint,3,opt,name=read_direction,json=readDirection,proto3,enum=event_store.client.streams.ReadReq_Options_ReadDirection" json:"read_direction,omitempty"`
	ResolveLinks  bool                           `protobuf:"varint,4,opt,name=resolve_links,json=resolveLinks,proto3" json:"resolve_links,omitempty"`
	// Types that are valid to be assigned to CountOption:
	//
	//	*ReadReq_Options_Count
	//	*ReadReq_Options_Subscription
	CountOption isReadReq_Options_CountOption `protobuf_oneof:"count_option"`
	// Types that are valid to be assigned to FilterOption:
	//
	//	*ReadReq_Options_Filter
	//	*ReadReq_Options_NoFilter
	FilterOption  isReadReq_Options_FilterOption `protobuf_oneof:"filter_option"`
	UuidOption    *ReadReq_Options_UUIDOption    `protobuf:"bytes,9,opt,name=uuid_option,json=uuidOption,proto3" json:"uuid_option,omitempty"`
	ControlOption *ReadReq_Options_ControlOption `protobuf:"bytes,10,opt,name=control_option,json=controlOption,proto3" json:"control_option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options) Reset() {
	*x = ReadReq_Options{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options) ProtoMessage() {}

func (x *ReadReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options.ProtoReflect.Descriptor instead.
func (*ReadReq_Options) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ReadReq_Options) GetStreamOption() isReadReq_Options_StreamOption {
	if x != nil {
		return x.StreamOption
	}
	return nil
}

func (x *ReadReq_Options) GetStream() *ReadReq_Options_StreamOptions {
	if x != nil {
		if x, ok := x.StreamOption.(*ReadReq_Options_Stream); ok {
			return x.Stream
		}
	}
	return nil
}

func (x *ReadReq_Options) GetAll() *ReadReq_Options_AllOptions {
	if x != nil {
		if x, ok := x.StreamOption.(*ReadReq_Options_All); ok {
			return x.All
		}
	}
	return nil
}

func (x *ReadReq_Options) GetReadDirection() ReadReq_Options_ReadDirection {
	if x != nil {
		return x.ReadDirection
	}
	return ReadReq_Options_Forwards
}

func (x *ReadReq_Options) GetResolveLinks() bool {
	if x != nil {
		return x.ResolveLinks
	}
	return false
}

func (x *ReadReq_Options) GetCountOption() isReadReq_Options_CountOption {
	if x != nil {
		return x.CountOption
	}
	return nil
}

func (x *ReadReq_Options) GetCount() uint64 {
	if x != nil {
		if x, ok := x.CountOption.(*ReadReq_Options_Count); ok {
			return x.Count
		}
	}
	return 0
}

func (x *ReadReq_Options) GetSubscription() *ReadReq_Options_SubscriptionOptions {
	if x != nil {
		if x, ok := x.CountOption.(*ReadReq_Options_Subscription); ok {
			return x.Subscription
		}
	}
	return nil
}

func (x *ReadReq_Options) GetFilterOption() isReadReq_Options_FilterOption {
	if x != nil {
		return x.FilterOption
	}
	return nil
}

func (x *ReadReq_Options) GetFilter() *ReadReq_Options_FilterOptions {
	if x != nil {
		if x, ok := x.FilterOption.(*ReadReq_Options_Filter); ok {
			return x.Filter
		}
	}
	return nil
}

func (x *ReadReq_Options) GetNoFilter() *shared.Empty {
	if x != nil {
		if x, ok := x.FilterOption.(*ReadReq_Options_NoFilter); ok {
			return x.NoFilter
		}
	}
	return nil
}

func (x *ReadReq_Options) GetUuidOption() *ReadReq_Options_UUIDOption {
	if x != nil {
		return x.UuidOption
	}
	return nil
}

func (x *ReadReq_Options) GetControlOption() *ReadReq_Options_ControlOption {
	if x != nil {
		return x.ControlOption
	}
	return nil
}

type isReadReq_Options_StreamOption interface {
	isReadReq_Options_StreamOption()
}

type ReadReq_Options_Stream struct {
	Stream *ReadReq_Options_StreamOptions `protobuf:"bytes,1,opt,name=stream,proto3,oneof"`
}

type ReadReq_Options_All struct {
	All *ReadReq_Options_AllOptions `protobuf:"bytes,2,opt,name=all,proto3,oneof"`
}

func (*ReadReq_Options_Stream) isReadReq_Options_StreamOption() {}

func (*ReadReq_Options_All) isReadReq_Options_StreamOption() {}

type isReadReq_Options_CountOption interface {
	isReadReq_Options_CountOption()
}

type ReadReq_Options_Count struct {
	Count uint64 `protobuf:"varint,5,opt,name=count,proto3,oneof"`
}

type ReadReq_Options_Subscription struct {
	Subscription *ReadReq_Options_SubscriptionOptions `protobuf:"bytes,6,opt,name=subscription,proto3,oneof"`
}

func (*ReadReq_Options_Count) isReadReq_Options_CountOption() {}

func (*ReadReq_Options_Subscription) isReadReq_Options_CountOption() {}

type isReadReq_Options_FilterOption interface {
	isReadReq_Options_FilterOption()
}

type ReadReq_Options_Filter struct {
	Filter *ReadReq_Options_FilterOptions `protobuf:"bytes,7,opt,name=filter,proto3,oneof"`
}

type ReadReq_Options_NoFilter struct {
	NoFilter *shared.Empty `protobuf:"bytes,8,opt,name=no_filter,json=noFilter,proto3,oneof"`
}

func (*ReadReq_Options_Filter) isReadReq_Options_FilterOption() {}

func (*ReadReq_Options_NoFilter) isReadReq_Options_FilterOption() {}

type ReadReq_Options_StreamOptions struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to RevisionOption:
	//
	//	*ReadReq_Options_StreamOptions_Revision
	//	*ReadReq_Options_StreamOptions_Start
	//	*ReadReq_Options_StreamOptions_End
	RevisionOption isReadReq_Options_StreamOptions_RevisionOption `protobuf_oneof:"revision_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReadReq_Options_StreamOptions) Reset() {
	*x = ReadReq_Options_StreamOptions{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_StreamOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_StreamOptions) ProtoMessage() {}

func (x *ReadReq_Options_StreamOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_StreamOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_StreamOptions) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ReadReq_Options_StreamOptions) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *ReadReq_Options_StreamOptions) GetRevisionOption() isReadReq_Options_StreamOptions_RevisionOption {
	if x != nil {
		return x.RevisionOption
	}
	return nil
}

func (x *ReadReq_Options_StreamOptions) GetRevision() uint64 {
	if x != nil {
		if x, ok := x.RevisionOption.(*ReadReq_Options_StreamOptions_Revision); ok {
			return x.Revision
		}
	}
	return 0
}

func (x *ReadReq_Options_StreamOptions) GetStart() *shared.Empty {
	if x != nil {
		if x, ok := x.RevisionOption.(*ReadReq_Options_StreamOptions_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *ReadReq_Options_StreamOptions) GetEnd() *shared.Empty {
	if x != nil {
		if x, ok := x.RevisionOption.(*ReadReq_Options_StreamOptions_End); ok {
			return x.End
		}
	}
	return nil
}

type isReadReq_Options_StreamOptions_RevisionOption interface {
	isReadReq_Options_StreamOptions_RevisionOption()
}

type ReadReq_Options_StreamOptions_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type ReadReq_Options_StreamOptions_Start struct {
	Start *shared.Empty `protobuf:"bytes,3,opt,name=start,proto3,oneof"`
}

type ReadReq_Options_StreamOptions_End struct {
	End *shared.Empty `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

func (*ReadReq_Options_StreamOptions_Revision) isReadReq_Options_StreamOptions_RevisionOption() {}

func (*ReadReq_Options_StreamOptions_Start) isReadReq_Options_StreamOptions_RevisionOption() {}

func (*ReadReq_Options_StreamOptions_End) isReadReq_Options_StreamOptions_RevisionOption() {}

type ReadReq_Options_AllOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AllOption:
	//
	//	*ReadReq_Options_AllOptions_Position
	//	*ReadReq_Options_AllOptions_Start
	//	*ReadReq_Options_AllOptions_End
	AllOption     isReadReq_Options_AllOptions_AllOption `protobuf_oneof:"all_option"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options_AllOptions) Reset() {
	*x = ReadReq_Options_AllOptions{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_AllOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_AllOptions) ProtoMessage() {}

func (x *ReadReq_Options_AllOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_AllOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_AllOptions) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *ReadReq_Options_AllOptions) GetAllOption() isReadReq_Options_AllOptions_AllOption {
	if x != nil {
		return x.AllOption
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetPosition() *ReadReq_Options_Position {
	if x != nil {
		if x, ok := x.AllOption.(*ReadReq_Options_AllOptions_Position); ok {
			return x.Position
		}
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetStart() *shared.Empty {
	if x != nil {
		if x, ok := x.AllOption.(*ReadReq_Options_AllOptions_Start); ok {
			return x.Start
		}
	}
	return nil
}

func (x *ReadReq_Options_AllOptions) GetEnd() *shared.Empty {
	if x != nil {
		if x, ok := x.AllOption.(*ReadReq_Options_AllOptions_End); ok {
			return x.End
		}
	}
	return nil
}

type isReadReq_Options_AllOptions_AllOption interface {
	isReadReq_Options_AllOptions_AllOption()
}

type ReadReq_Options_AllOptions_Position struct {
	Position *ReadReq_Options_Position `protobuf:"bytes,1,opt,name=position,proto3,oneof"`
}

type ReadReq_Options_AllOptions_Start struct {
	Start *shared.Empty `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type ReadReq_Options_AllOptions_End struct {
	End *shared.Empty `protobuf:"bytes,3,opt,name=end,proto3,oneof"`
}

func (*ReadReq_Options_AllOptions_Position) isReadReq_Options_AllOptions_AllOption() {}

func (*ReadReq_Options_AllOptions_Start) isReadReq_Options_AllOptions_AllOption() {}

func (*ReadReq_Options_AllOptions_End) isReadReq_Options_AllOptions_AllOption() {}

type ReadReq_Options_SubscriptionOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options_SubscriptionOptions) Reset() {
	*x = ReadReq_Options_SubscriptionOptions{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_SubscriptionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_SubscriptionOptions) ProtoMessage() {}

func (x *ReadReq_Options_SubscriptionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_SubscriptionOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_SubscriptionOptions) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 2}
}

type ReadReq_Options_Position struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReadReq_Options_Position) Reset() {
	*x = ReadReq_Options_Position{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_Position) ProtoMessage() {}

func (x *ReadReq_Options_Position) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_Position.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_Position) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *ReadReq_Options_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadReq_Options_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type ReadReq_Options_FilterOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Filter:
	//
	//	*ReadReq_Options_FilterOptions_StreamIdentifier
	//	*ReadReq_Options_FilterOptions_EventType
	Filter isReadReq_Options_FilterOptions_Filter `protobuf_oneof:"filter"`
	// Types that are valid to be assigned to Window:
	//
	//	*ReadReq_Options_FilterOptions_Max
	//	*ReadReq_Options_FilterOptions_Count
	Window                       isReadReq_Options_FilterOptions_Window `protobuf_oneof:"window"`
	CheckpointIntervalMultiplier uint32                                 `protobuf:"varint,5,opt,name=checkpointIntervalMultiplier,proto3" json:"checkpointIntervalMultiplier,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ReadReq_Options_FilterOptions) Reset() {
	*x = ReadReq_Options_FilterOptions{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_FilterOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_FilterOptions) ProtoMessage() {}

func (x *ReadReq_Options_FilterOptions) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_FilterOptions.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_FilterOptions) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 4}
}

func (x *ReadReq_Options_FilterOptions) GetFilter() isReadReq_Options_FilterOptions_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetStreamIdentifier() *ReadReq_Options_FilterOptions_Expression {
	if x != nil {
		if x, ok := x.Filter.(*ReadReq_Options_FilterOptions_StreamIdentifier); ok {
			return x.StreamIdentifier
		}
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetEventType() *ReadReq_Options_FilterOptions_Expression {
	if x != nil {
		if x, ok := x.Filter.(*ReadReq_Options_FilterOptions_EventType); ok {
			return x.EventType
		}
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetWindow() isReadReq_Options_FilterOptions_Window {
	if x != nil {
		return x.Window
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetMax() uint32 {
	if x != nil {
		if x, ok := x.Window.(*ReadReq_Options_FilterOptions_Max); ok {
			return x.Max
		}
	}
	return 0
}

func (x *ReadReq_Options_FilterOptions) GetCount() *shared.Empty {
	if x != nil {
		if x, ok := x.Window.(*ReadReq_Options_FilterOptions_Count); ok {
			return x.Count
		}
	}
	return nil
}

func (x *ReadReq_Options_FilterOptions) GetCheckpointIntervalMultiplier() uint32 {
	if x != nil {
		return x.CheckpointIntervalMultiplier
	}
	return 0
}

type isReadReq_Options_FilterOptions_Filter interface {
	isReadReq_Options_FilterOptions_Filter()
}

type ReadReq_Options_FilterOptions_StreamIdentifier struct {
	StreamIdentifier *ReadReq_Options_FilterOptions_Expression `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3,oneof"`
}

type ReadReq_Options_FilterOptions_EventType struct {
	EventType *ReadReq_Options_FilterOptions_Expression `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3,oneof"`
}

func (*ReadReq_Options_FilterOptions_StreamIdentifier) isReadReq_Options_FilterOptions_Filter() {}

func (*ReadReq_Options_FilterOptions_EventType) isReadReq_Options_FilterOptions_Filter() {}

type isReadReq_Options_FilterOptions_Window interface {
	isReadReq_Options_FilterOptions_Window()
}

type ReadReq_Options_FilterOptions_Max struct {
	Max uint32 `protobuf:"varint,3,opt,name=max,proto3,oneof"`
}

type ReadReq_Options_FilterOptions_Count struct {
	Count *shared.Empty `protobuf:"bytes,4,opt,name=count,proto3,oneof"`
}

func (*ReadReq_Options_FilterOptions_Max) isReadReq_Options_FilterOptions_Window() {}

func (*ReadReq_Options_FilterOptions_Count) isReadReq_Options_FilterOptions_Window() {}

type ReadReq_Options_UUIDOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*ReadReq_Options_UUIDOption_Structured
	//	*ReadReq_Options_UUIDOption_String_
	Content       isReadReq_Options_UUIDOption_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options_UUIDOption) Reset() {
	*x = ReadReq_Options_UUIDOption{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_UUIDOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_UUIDOption) ProtoMessage() {}

func (x *ReadReq_Options_UUIDOption) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_UUIDOption.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_UUIDOption) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 5}
}

func (x *ReadReq_Options_UUIDOption) GetContent() isReadReq_Options_UUIDOption_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReadReq_Options_UUIDOption) GetStructured() *shared.Empty {
	if x != nil {
		if x, ok := x.Content.(*ReadReq_Options_UUIDOption_Structured); ok {
			return x.Structured
		}
	}
	return nil
}

func (x *ReadReq_Options_UUIDOption) GetString_() *shared.Empty {
	if x != nil {
		if x, ok := x.Content.(*ReadReq_Options_UUIDOption_String_); ok {
			return x.String_
		}
	}
	return nil
}

type isReadReq_Options_UUIDOption_Content interface {
	isReadReq_Options_UUIDOption_Content()
}

type ReadReq_Options_UUIDOption_Structured struct {
	Structured *shared.Empty `protobuf:"bytes,1,opt,name=structured,proto3,oneof"`
}

type ReadReq_Options_UUIDOption_String_ struct {
	String_ *shared.Empty `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

func (*ReadReq_Options_UUIDOption_Structured) isReadReq_Options_UUIDOption_Content() {}

func (*ReadReq_Options_UUIDOption_String_) isReadReq_Options_UUIDOption_Content() {}

type ReadReq_Options_ControlOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Compatibility uint32                 `protobuf:"varint,1,opt,name=compatibility,proto3" json:"compatibility,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options_ControlOption) Reset() {
	*x = ReadReq_Options_ControlOption{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_ControlOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_ControlOption) ProtoMessage() {}

func (x *ReadReq_Options_ControlOption) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_ControlOption.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_ControlOption) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 6}
}

func (x *ReadReq_Options_ControlOption) GetCompatibility() uint32 {
	if x != nil {
		return x.Compatibility
	}
	return 0
}

type ReadReq_Options_FilterOptions_Expression struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Regex         string                 `protobuf:"bytes,1,opt,name=regex,proto3" json:"regex,omitempty"`
	Prefix        []string               `protobuf:"bytes,2,rep,name=prefix,proto3" json:"prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadReq_Options_FilterOptions_Expression) Reset() {
	*x = ReadReq_Options_FilterOptions_Expression{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadReq_Options_FilterOptions_Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadReq_Options_FilterOptions_Expression) ProtoMessage() {}

func (x *ReadReq_Options_FilterOptions_Expression) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadReq_Options_FilterOptions_Expression.ProtoReflect.Descriptor instead.
func (*ReadReq_Options_FilterOptions_Expression) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{0, 0, 4, 0}
}

func (x *ReadReq_Options_FilterOptions_Expression) GetRegex() string {
	if x != nil {
		return x.Regex
	}
	return ""
}

func (x *ReadReq_Options_FilterOptions_Expression) GetPrefix() []string {
	if x != nil {
		return x.Prefix
	}
	return nil
}

// The $all or stream subscription has caught up and become live.
type ReadResp_CaughtUp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current time in the server when the subscription caught up
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Checkpoint for resuming a stream subscription.
	// For stream subscriptions it is populated unless the stream is empty.
	// For $all subscriptions it is not populated.
	StreamRevision *int64 `protobuf:"varint,2,opt,name=stream_revision,json=streamRevision,proto3,oneof" json:"stream_revision,omitempty"`
	// Checkpoint for resuming a $all subscription.
	// For stream subscriptions it is not populated.
	// For $all subscriptions it is populated unless the database is empty.
	Position      *ReadResp_Position `protobuf:"bytes,3,opt,name=position,proto3,oneof" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResp_CaughtUp) Reset() {
	*x = ReadResp_CaughtUp{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_CaughtUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_CaughtUp) ProtoMessage() {}

func (x *ReadResp_CaughtUp) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_CaughtUp.ProtoReflect.Descriptor instead.
func (*ReadResp_CaughtUp) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ReadResp_CaughtUp) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ReadResp_CaughtUp) GetStreamRevision() int64 {
	if x != nil && x.StreamRevision != nil {
		return *x.StreamRevision
	}
	return 0
}

func (x *ReadResp_CaughtUp) GetPosition() *ReadResp_Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// The $all or stream subscription has fallen back into catchup mode and is no longer live.
type ReadResp_FellBehind struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Current time in the server when the subscription fell behind
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Checkpoint for resuming a stream subscription.
	// For stream subscriptions it is populated unless the stream is empty.
	// For $all subscriptions it is not populated.
	StreamRevision *int64 `protobuf:"varint,2,opt,name=stream_revision,json=streamRevision,proto3,oneof" json:"stream_revision,omitempty"`
	// Checkpoint for resuming a $all subscription.
	// For stream subscriptions it is not populated.
	// For $all subscriptions it is populated unless the database is empty.
	Position      *ReadResp_Position `protobuf:"bytes,3,opt,name=position,proto3,oneof" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResp_FellBehind) Reset() {
	*x = ReadResp_FellBehind{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_FellBehind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_FellBehind) ProtoMessage() {}

func (x *ReadResp_FellBehind) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_FellBehind.ProtoReflect.Descriptor instead.
func (*ReadResp_FellBehind) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ReadResp_FellBehind) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ReadResp_FellBehind) GetStreamRevision() int64 {
	if x != nil && x.StreamRevision != nil {
		return *x.StreamRevision
	}
	return 0
}

func (x *ReadResp_FellBehind) GetPosition() *ReadResp_Position {
	if x != nil {
		return x.Position
	}
	return nil
}

type ReadResp_ReadEvent struct {
	state protoimpl.MessageState            `protogen:"open.v1"`
	Event *ReadResp_ReadEvent_RecordedEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Link  *ReadResp_ReadEvent_RecordedEvent `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	// Types that are valid to be assigned to Position:
	//
	//	*ReadResp_ReadEvent_CommitPosition
	//	*ReadResp_ReadEvent_NoPosition
	Position      isReadResp_ReadEvent_Position `protobuf_oneof:"position"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResp_ReadEvent) Reset() {
	*x = ReadResp_ReadEvent{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_ReadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_ReadEvent) ProtoMessage() {}

func (x *ReadResp_ReadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_ReadEvent.ProtoReflect.Descriptor instead.
func (*ReadResp_ReadEvent) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ReadResp_ReadEvent) GetEvent() *ReadResp_ReadEvent_RecordedEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ReadResp_ReadEvent) GetLink() *ReadResp_ReadEvent_RecordedEvent {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *ReadResp_ReadEvent) GetPosition() isReadResp_ReadEvent_Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ReadResp_ReadEvent) GetCommitPosition() uint64 {
	if x != nil {
		if x, ok := x.Position.(*ReadResp_ReadEvent_CommitPosition); ok {
			return x.CommitPosition
		}
	}
	return 0
}

func (x *ReadResp_ReadEvent) GetNoPosition() *shared.Empty {
	if x != nil {
		if x, ok := x.Position.(*ReadResp_ReadEvent_NoPosition); ok {
			return x.NoPosition
		}
	}
	return nil
}

type isReadResp_ReadEvent_Position interface {
	isReadResp_ReadEvent_Position()
}

type ReadResp_ReadEvent_CommitPosition struct {
	CommitPosition uint64 `protobuf:"varint,3,opt,name=commit_position,json=commitPosition,proto3,oneof"`
}

type ReadResp_ReadEvent_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,4,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*ReadResp_ReadEvent_CommitPosition) isReadResp_ReadEvent_Position() {}

func (*ReadResp_ReadEvent_NoPosition) isReadResp_ReadEvent_Position() {}

type ReadResp_SubscriptionConfirmation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReadResp_SubscriptionConfirmation) Reset() {
	*x = ReadResp_SubscriptionConfirmation{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_SubscriptionConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_SubscriptionConfirmation) ProtoMessage() {}

func (x *ReadResp_SubscriptionConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_SubscriptionConfirmation.ProtoReflect.Descriptor instead.
func (*ReadResp_SubscriptionConfirmation) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ReadResp_SubscriptionConfirmation) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type ReadResp_Checkpoint struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	// Current time in the server when the checkpoint was reached
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadResp_Checkpoint) Reset() {
	*x = ReadResp_Checkpoint{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_Checkpoint) ProtoMessage() {}

func (x *ReadResp_Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_Checkpoint.ProtoReflect.Descriptor instead.
func (*ReadResp_Checkpoint) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 4}
}

func (x *ReadResp_Checkpoint) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_Checkpoint) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

func (x *ReadResp_Checkpoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ReadResp_Position struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ReadResp_Position) Reset() {
	*x = ReadResp_Position{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_Position) ProtoMessage() {}

func (x *ReadResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_Position.ProtoReflect.Descriptor instead.
func (*ReadResp_Position) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 5}
}

func (x *ReadResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type ReadResp_StreamNotFound struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReadResp_StreamNotFound) Reset() {
	*x = ReadResp_StreamNotFound{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_StreamNotFound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_StreamNotFound) ProtoMessage() {}

func (x *ReadResp_StreamNotFound) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_StreamNotFound.ProtoReflect.Descriptor instead.
func (*ReadResp_StreamNotFound) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 6}
}

func (x *ReadResp_StreamNotFound) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

type ReadResp_ReadEvent_RecordedEvent struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Id               *shared.UUID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,2,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	StreamRevision   uint64                   `protobuf:"varint,3,opt,name=stream_revision,json=streamRevision,proto3" json:"stream_revision,omitempty"`
	PreparePosition  uint64                   `protobuf:"varint,4,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	CommitPosition   uint64                   `protobuf:"varint,5,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	Metadata         map[string]string        `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CustomMetadata   []byte                   `protobuf:"bytes,7,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	Data             []byte                   `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReadResp_ReadEvent_RecordedEvent) Reset() {
	*x = ReadResp_ReadEvent_RecordedEvent{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadResp_ReadEvent_RecordedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResp_ReadEvent_RecordedEvent) ProtoMessage() {}

func (x *ReadResp_ReadEvent_RecordedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResp_ReadEvent_RecordedEvent.ProtoReflect.Descriptor instead.
func (*ReadResp_ReadEvent_RecordedEvent) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetId() *shared.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetStreamRevision() uint64 {
	if x != nil {
		return x.StreamRevision
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetCustomMetadata() []byte {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *ReadResp_ReadEvent_RecordedEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendReq_Options struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to ExpectedStreamRevision:
	//
	//	*AppendReq_Options_Revision
	//	*AppendReq_Options_NoStream
	//	*AppendReq_Options_Any
	//	*AppendReq_Options_StreamExists
	ExpectedStreamRevision isAppendReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AppendReq_Options) Reset() {
	*x = AppendReq_Options{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq_Options) ProtoMessage() {}

func (x *AppendReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq_Options.ProtoReflect.Descriptor instead.
func (*AppendReq_Options) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{2, 0}
}

func (x *AppendReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *AppendReq_Options) GetExpectedStreamRevision() isAppendReq_Options_ExpectedStreamRevision {
	if x != nil {
		return x.ExpectedStreamRevision
	}
	return nil
}

func (x *AppendReq_Options) GetRevision() uint64 {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*AppendReq_Options_Revision); ok {
			return x.Revision
		}
	}
	return 0
}

func (x *AppendReq_Options) GetNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*AppendReq_Options_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *AppendReq_Options) GetAny() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*AppendReq_Options_Any); ok {
			return x.Any
		}
	}
	return nil
}

func (x *AppendReq_Options) GetStreamExists() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*AppendReq_Options_StreamExists); ok {
			return x.StreamExists
		}
	}
	return nil
}

type isAppendReq_Options_ExpectedStreamRevision interface {
	isAppendReq_Options_ExpectedStreamRevision()
}

type AppendReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type AppendReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type AppendReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type AppendReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*AppendReq_Options_Revision) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_NoStream) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_Any) isAppendReq_Options_ExpectedStreamRevision() {}

func (*AppendReq_Options_StreamExists) isAppendReq_Options_ExpectedStreamRevision() {}

type AppendReq_ProposedMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *shared.UUID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CustomMetadata []byte                 `protobuf:"bytes,3,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	Data           []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppendReq_ProposedMessage) Reset() {
	*x = AppendReq_ProposedMessage{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendReq_ProposedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendReq_ProposedMessage) ProtoMessage() {}

func (x *AppendReq_ProposedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendReq_ProposedMessage.ProtoReflect.Descriptor instead.
func (*AppendReq_ProposedMessage) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{2, 1}
}

func (x *AppendReq_ProposedMessage) GetId() *shared.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetCustomMetadata() []byte {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *AppendReq_ProposedMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppendResp_Position struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AppendResp_Position) Reset() {
	*x = AppendResp_Position{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_Position) ProtoMessage() {}

func (x *AppendResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_Position.ProtoReflect.Descriptor instead.
func (*AppendResp_Position) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AppendResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *AppendResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type AppendResp_Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CurrentRevisionOption:
	//
	//	*AppendResp_Success_CurrentRevision
	//	*AppendResp_Success_NoStream
	CurrentRevisionOption isAppendResp_Success_CurrentRevisionOption `protobuf_oneof:"current_revision_option"`
	// Types that are valid to be assigned to PositionOption:
	//
	//	*AppendResp_Success_Position
	//	*AppendResp_Success_NoPosition
	PositionOption isAppendResp_Success_PositionOption `protobuf_oneof:"position_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppendResp_Success) Reset() {
	*x = AppendResp_Success{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResp_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_Success) ProtoMessage() {}

func (x *AppendResp_Success) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_Success.ProtoReflect.Descriptor instead.
func (*AppendResp_Success) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{3, 1}
}

func (x *AppendResp_Success) GetCurrentRevisionOption() isAppendResp_Success_CurrentRevisionOption {
	if x != nil {
		return x.CurrentRevisionOption
	}
	return nil
}

func (x *AppendResp_Success) GetCurrentRevision() uint64 {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*AppendResp_Success_CurrentRevision); ok {
			return x.CurrentRevision
		}
	}
	return 0
}

func (x *AppendResp_Success) GetNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*AppendResp_Success_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *AppendResp_Success) GetPositionOption() isAppendResp_Success_PositionOption {
	if x != nil {
		return x.PositionOption
	}
	return nil
}

func (x *AppendResp_Success) GetPosition() *AppendResp_Position {
	if x != nil {
		if x, ok := x.PositionOption.(*AppendResp_Success_Position); ok {
			return x.Position
		}
	}
	return nil
}

func (x *AppendResp_Success) GetNoPosition() *shared.Empty {
	if x != nil {
		if x, ok := x.PositionOption.(*AppendResp_Success_NoPosition); ok {
			return x.NoPosition
		}
	}
	return nil
}

type isAppendResp_Success_CurrentRevisionOption interface {
	isAppendResp_Success_CurrentRevisionOption()
}

type AppendResp_Success_CurrentRevision struct {
	CurrentRevision uint64 `protobuf:"varint,1,opt,name=current_revision,json=currentRevision,proto3,oneof"`
}

type AppendResp_Success_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,2,opt,name=no_stream,json=noStream,proto3,oneof"`
}

func (*AppendResp_Success_CurrentRevision) isAppendResp_Success_CurrentRevisionOption() {}

func (*AppendResp_Success_NoStream) isAppendResp_Success_CurrentRevisionOption() {}

type isAppendResp_Success_PositionOption interface {
	isAppendResp_Success_PositionOption()
}

type AppendResp_Success_Position struct {
	Position *AppendResp_Position `protobuf:"bytes,3,opt,name=position,proto3,oneof"`
}

type AppendResp_Success_NoPosition struct {
	NoPosition *shared.Empty `protobuf:"bytes,4,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*AppendResp_Success_Position) isAppendResp_Success_PositionOption() {}

func (*AppendResp_Success_NoPosition) isAppendResp_Success_PositionOption() {}

type AppendResp_WrongExpectedVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CurrentRevisionOption_20_6_0:
	//
	//	*AppendResp_WrongExpectedVersion_CurrentRevision_20_6_0
	//	*AppendResp_WrongExpectedVersion_NoStream_20_6_0
	CurrentRevisionOption_20_6_0 isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0 `protobuf_oneof:"current_revision_option_20_6_0"`
	// Types that are valid to be assigned to ExpectedRevisionOption_20_6_0:
	//
	//	*AppendResp_WrongExpectedVersion_ExpectedRevision_20_6_0
	//	*AppendResp_WrongExpectedVersion_Any_20_6_0
	//	*AppendResp_WrongExpectedVersion_StreamExists_20_6_0
	ExpectedRevisionOption_20_6_0 isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0 `protobuf_oneof:"expected_revision_option_20_6_0"`
	// Types that are valid to be assigned to CurrentRevisionOption:
	//
	//	*AppendResp_WrongExpectedVersion_CurrentRevision
	//	*AppendResp_WrongExpectedVersion_CurrentNoStream
	CurrentRevisionOption isAppendResp_WrongExpectedVersion_CurrentRevisionOption `protobuf_oneof:"current_revision_option"`
	// Types that are valid to be assigned to ExpectedRevisionOption:
	//
	//	*AppendResp_WrongExpectedVersion_ExpectedRevision
	//	*AppendResp_WrongExpectedVersion_ExpectedAny
	//	*AppendResp_WrongExpectedVersion_ExpectedStreamExists
	//	*AppendResp_WrongExpectedVersion_ExpectedNoStream
	ExpectedRevisionOption isAppendResp_WrongExpectedVersion_ExpectedRevisionOption `protobuf_oneof:"expected_revision_option"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AppendResp_WrongExpectedVersion) Reset() {
	*x = AppendResp_WrongExpectedVersion{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendResp_WrongExpectedVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendResp_WrongExpectedVersion) ProtoMessage() {}

func (x *AppendResp_WrongExpectedVersion) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendResp_WrongExpectedVersion.ProtoReflect.Descriptor instead.
func (*AppendResp_WrongExpectedVersion) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{3, 2}
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentRevisionOption_20_6_0() isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0 {
	if x != nil {
		return x.CurrentRevisionOption_20_6_0
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentRevision_20_6_0() uint64 {
	if x != nil {
		if x, ok := x.CurrentRevisionOption_20_6_0.(*AppendResp_WrongExpectedVersion_CurrentRevision_20_6_0); ok {
			return x.CurrentRevision_20_6_0
		}
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetNoStream_20_6_0() *shared.Empty {
	if x != nil {
		if x, ok := x.CurrentRevisionOption_20_6_0.(*AppendResp_WrongExpectedVersion_NoStream_20_6_0); ok {
			return x.NoStream_20_6_0
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedRevisionOption_20_6_0() isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0 {
	if x != nil {
		return x.ExpectedRevisionOption_20_6_0
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedRevision_20_6_0() uint64 {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption_20_6_0.(*AppendResp_WrongExpectedVersion_ExpectedRevision_20_6_0); ok {
			return x.ExpectedRevision_20_6_0
		}
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetAny_20_6_0() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption_20_6_0.(*AppendResp_WrongExpectedVersion_Any_20_6_0); ok {
			return x.Any_20_6_0
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetStreamExists_20_6_0() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption_20_6_0.(*AppendResp_WrongExpectedVersion_StreamExists_20_6_0); ok {
			return x.StreamExists_20_6_0
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentRevisionOption() isAppendResp_WrongExpectedVersion_CurrentRevisionOption {
	if x != nil {
		return x.CurrentRevisionOption
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentRevision() uint64 {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*AppendResp_WrongExpectedVersion_CurrentRevision); ok {
			return x.CurrentRevision
		}
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetCurrentNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*AppendResp_WrongExpectedVersion_CurrentNoStream); ok {
			return x.CurrentNoStream
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedRevisionOption() isAppendResp_WrongExpectedVersion_ExpectedRevisionOption {
	if x != nil {
		return x.ExpectedRevisionOption
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedRevision() uint64 {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption.(*AppendResp_WrongExpectedVersion_ExpectedRevision); ok {
			return x.ExpectedRevision
		}
	}
	return 0
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedAny() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption.(*AppendResp_WrongExpectedVersion_ExpectedAny); ok {
			return x.ExpectedAny
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedStreamExists() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption.(*AppendResp_WrongExpectedVersion_ExpectedStreamExists); ok {
			return x.ExpectedStreamExists
		}
	}
	return nil
}

func (x *AppendResp_WrongExpectedVersion) GetExpectedNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedRevisionOption.(*AppendResp_WrongExpectedVersion_ExpectedNoStream); ok {
			return x.ExpectedNoStream
		}
	}
	return nil
}

type isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0 interface {
	isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0()
}

type AppendResp_WrongExpectedVersion_CurrentRevision_20_6_0 struct {
	CurrentRevision_20_6_0 uint64 `protobuf:"varint,1,opt,name=current_revision_20_6_0,json=currentRevision2060,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_NoStream_20_6_0 struct {
	NoStream_20_6_0 *shared.Empty `protobuf:"bytes,2,opt,name=no_stream_20_6_0,json=noStream2060,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_CurrentRevision_20_6_0) isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0() {
}

func (*AppendResp_WrongExpectedVersion_NoStream_20_6_0) isAppendResp_WrongExpectedVersion_CurrentRevisionOption_20_6_0() {
}

type isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0 interface {
	isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0()
}

type AppendResp_WrongExpectedVersion_ExpectedRevision_20_6_0 struct {
	ExpectedRevision_20_6_0 uint64 `protobuf:"varint,3,opt,name=expected_revision_20_6_0,json=expectedRevision2060,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_Any_20_6_0 struct {
	Any_20_6_0 *shared.Empty `protobuf:"bytes,4,opt,name=any_20_6_0,json=any2060,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_StreamExists_20_6_0 struct {
	StreamExists_20_6_0 *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists_20_6_0,json=streamExists2060,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_ExpectedRevision_20_6_0) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0() {
}

func (*AppendResp_WrongExpectedVersion_Any_20_6_0) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0() {
}

func (*AppendResp_WrongExpectedVersion_StreamExists_20_6_0) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption_20_6_0() {
}

type isAppendResp_WrongExpectedVersion_CurrentRevisionOption interface {
	isAppendResp_WrongExpectedVersion_CurrentRevisionOption()
}

type AppendResp_WrongExpectedVersion_CurrentRevision struct {
	CurrentRevision uint64 `protobuf:"varint,6,opt,name=current_revision,json=currentRevision,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_CurrentNoStream struct {
	CurrentNoStream *shared.Empty `protobuf:"bytes,7,opt,name=current_no_stream,json=currentNoStream,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_CurrentRevision) isAppendResp_WrongExpectedVersion_CurrentRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_CurrentNoStream) isAppendResp_WrongExpectedVersion_CurrentRevisionOption() {
}

type isAppendResp_WrongExpectedVersion_ExpectedRevisionOption interface {
	isAppendResp_WrongExpectedVersion_ExpectedRevisionOption()
}

type AppendResp_WrongExpectedVersion_ExpectedRevision struct {
	ExpectedRevision uint64 `protobuf:"varint,8,opt,name=expected_revision,json=expectedRevision,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_ExpectedAny struct {
	ExpectedAny *shared.Empty `protobuf:"bytes,9,opt,name=expected_any,json=expectedAny,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_ExpectedStreamExists struct {
	ExpectedStreamExists *shared.Empty `protobuf:"bytes,10,opt,name=expected_stream_exists,json=expectedStreamExists,proto3,oneof"`
}

type AppendResp_WrongExpectedVersion_ExpectedNoStream struct {
	ExpectedNoStream *shared.Empty `protobuf:"bytes,11,opt,name=expected_no_stream,json=expectedNoStream,proto3,oneof"`
}

func (*AppendResp_WrongExpectedVersion_ExpectedRevision) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_ExpectedAny) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_ExpectedStreamExists) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

func (*AppendResp_WrongExpectedVersion_ExpectedNoStream) isAppendResp_WrongExpectedVersion_ExpectedRevisionOption() {
}

type BatchAppendReq_Options struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to ExpectedStreamPosition:
	//
	//	*BatchAppendReq_Options_StreamPosition
	//	*BatchAppendReq_Options_NoStream
	//	*BatchAppendReq_Options_Any
	//	*BatchAppendReq_Options_StreamExists
	ExpectedStreamPosition isBatchAppendReq_Options_ExpectedStreamPosition `protobuf_oneof:"expected_stream_position"`
	// Types that are valid to be assigned to DeadlineOption:
	//
	//	*BatchAppendReq_Options_Deadline_21_10_0
	//	*BatchAppendReq_Options_Deadline
	DeadlineOption isBatchAppendReq_Options_DeadlineOption `protobuf_oneof:"deadline_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchAppendReq_Options) Reset() {
	*x = BatchAppendReq_Options{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAppendReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAppendReq_Options) ProtoMessage() {}

func (x *BatchAppendReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAppendReq_Options.ProtoReflect.Descriptor instead.
func (*BatchAppendReq_Options) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{4, 0}
}

func (x *BatchAppendReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *BatchAppendReq_Options) GetExpectedStreamPosition() isBatchAppendReq_Options_ExpectedStreamPosition {
	if x != nil {
		return x.ExpectedStreamPosition
	}
	return nil
}

func (x *BatchAppendReq_Options) GetStreamPosition() uint64 {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendReq_Options_StreamPosition); ok {
			return x.StreamPosition
		}
	}
	return 0
}

func (x *BatchAppendReq_Options) GetNoStream() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendReq_Options_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *BatchAppendReq_Options) GetAny() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendReq_Options_Any); ok {
			return x.Any
		}
	}
	return nil
}

func (x *BatchAppendReq_Options) GetStreamExists() *emptypb.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamPosition.(*BatchAppendReq_Options_StreamExists); ok {
			return x.StreamExists
		}
	}
	return nil
}

func (x *BatchAppendReq_Options) GetDeadlineOption() isBatchAppendReq_Options_DeadlineOption {
	if x != nil {
		return x.DeadlineOption
	}
	return nil
}

func (x *BatchAppendReq_Options) GetDeadline_21_10_0() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.DeadlineOption.(*BatchAppendReq_Options_Deadline_21_10_0); ok {
			return x.Deadline_21_10_0
		}
	}
	return nil
}

func (x *BatchAppendReq_Options) GetDeadline() *durationpb.Duration {
	if x != nil {
		if x, ok := x.DeadlineOption.(*BatchAppendReq_Options_Deadline); ok {
			return x.Deadline
		}
	}
	return nil
}

type isBatchAppendReq_Options_ExpectedStreamPosition interface {
	isBatchAppendReq_Options_ExpectedStreamPosition()
}

type BatchAppendReq_Options_StreamPosition struct {
	StreamPosition uint64 `protobuf:"varint,2,opt,name=stream_position,json=streamPosition,proto3,oneof"`
}

type BatchAppendReq_Options_NoStream struct {
	NoStream *emptypb.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type BatchAppendReq_Options_Any struct {
	Any *emptypb.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type BatchAppendReq_Options_StreamExists struct {
	StreamExists *emptypb.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*BatchAppendReq_Options_StreamPosition) isBatchAppendReq_Options_ExpectedStreamPosition() {}

func (*BatchAppendReq_Options_NoStream) isBatchAppendReq_Options_ExpectedStreamPosition() {}

func (*BatchAppendReq_Options_Any) isBatchAppendReq_Options_ExpectedStreamPosition() {}

func (*BatchAppendReq_Options_StreamExists) isBatchAppendReq_Options_ExpectedStreamPosition() {}

type isBatchAppendReq_Options_DeadlineOption interface {
	isBatchAppendReq_Options_DeadlineOption()
}

type BatchAppendReq_Options_Deadline_21_10_0 struct {
	Deadline_21_10_0 *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deadline_21_10_0,json=deadline21100,proto3,oneof"`
}

type BatchAppendReq_Options_Deadline struct {
	Deadline *durationpb.Duration `protobuf:"bytes,7,opt,name=deadline,proto3,oneof"`
}

func (*BatchAppendReq_Options_Deadline_21_10_0) isBatchAppendReq_Options_DeadlineOption() {}

func (*BatchAppendReq_Options_Deadline) isBatchAppendReq_Options_DeadlineOption() {}

type BatchAppendReq_ProposedMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *shared.UUID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CustomMetadata []byte                 `protobuf:"bytes,3,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	Data           []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchAppendReq_ProposedMessage) Reset() {
	*x = BatchAppendReq_ProposedMessage{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAppendReq_ProposedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAppendReq_ProposedMessage) ProtoMessage() {}

func (x *BatchAppendReq_ProposedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAppendReq_ProposedMessage.ProtoReflect.Descriptor instead.
func (*BatchAppendReq_ProposedMessage) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{4, 1}
}

func (x *BatchAppendReq_ProposedMessage) GetId() *shared.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BatchAppendReq_ProposedMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *BatchAppendReq_ProposedMessage) GetCustomMetadata() []byte {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *BatchAppendReq_ProposedMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BatchAppendResp_Success struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to CurrentRevisionOption:
	//
	//	*BatchAppendResp_Success_CurrentRevision
	//	*BatchAppendResp_Success_NoStream
	CurrentRevisionOption isBatchAppendResp_Success_CurrentRevisionOption `protobuf_oneof:"current_revision_option"`
	// Types that are valid to be assigned to PositionOption:
	//
	//	*BatchAppendResp_Success_Position
	//	*BatchAppendResp_Success_NoPosition
	PositionOption isBatchAppendResp_Success_PositionOption `protobuf_oneof:"position_option"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchAppendResp_Success) Reset() {
	*x = BatchAppendResp_Success{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchAppendResp_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchAppendResp_Success) ProtoMessage() {}

func (x *BatchAppendResp_Success) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchAppendResp_Success.ProtoReflect.Descriptor instead.
func (*BatchAppendResp_Success) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BatchAppendResp_Success) GetCurrentRevisionOption() isBatchAppendResp_Success_CurrentRevisionOption {
	if x != nil {
		return x.CurrentRevisionOption
	}
	return nil
}

func (x *BatchAppendResp_Success) GetCurrentRevision() uint64 {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*BatchAppendResp_Success_CurrentRevision); ok {
			return x.CurrentRevision
		}
	}
	return 0
}

func (x *BatchAppendResp_Success) GetNoStream() *emptypb.Empty {
	if x != nil {
		if x, ok := x.CurrentRevisionOption.(*BatchAppendResp_Success_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *BatchAppendResp_Success) GetPositionOption() isBatchAppendResp_Success_PositionOption {
	if x != nil {
		return x.PositionOption
	}
	return nil
}

func (x *BatchAppendResp_Success) GetPosition() *shared.AllStreamPosition {
	if x != nil {
		if x, ok := x.PositionOption.(*BatchAppendResp_Success_Position); ok {
			return x.Position
		}
	}
	return nil
}

func (x *BatchAppendResp_Success) GetNoPosition() *emptypb.Empty {
	if x != nil {
		if x, ok := x.PositionOption.(*BatchAppendResp_Success_NoPosition); ok {
			return x.NoPosition
		}
	}
	return nil
}

type isBatchAppendResp_Success_CurrentRevisionOption interface {
	isBatchAppendResp_Success_CurrentRevisionOption()
}

type BatchAppendResp_Success_CurrentRevision struct {
	CurrentRevision uint64 `protobuf:"varint,1,opt,name=current_revision,json=currentRevision,proto3,oneof"`
}

type BatchAppendResp_Success_NoStream struct {
	NoStream *emptypb.Empty `protobuf:"bytes,2,opt,name=no_stream,json=noStream,proto3,oneof"`
}

func (*BatchAppendResp_Success_CurrentRevision) isBatchAppendResp_Success_CurrentRevisionOption() {}

func (*BatchAppendResp_Success_NoStream) isBatchAppendResp_Success_CurrentRevisionOption() {}

type isBatchAppendResp_Success_PositionOption interface {
	isBatchAppendResp_Success_PositionOption()
}

type BatchAppendResp_Success_Position struct {
	Position *shared.AllStreamPosition `protobuf:"bytes,3,opt,name=position,proto3,oneof"`
}

type BatchAppendResp_Success_NoPosition struct {
	NoPosition *emptypb.Empty `protobuf:"bytes,4,opt,name=no_position,json=noPosition,proto3,oneof"`
}

func (*BatchAppendResp_Success_Position) isBatchAppendResp_Success_PositionOption() {}

func (*BatchAppendResp_Success_NoPosition) isBatchAppendResp_Success_PositionOption() {}

type DeleteReq_Options struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to ExpectedStreamRevision:
	//
	//	*DeleteReq_Options_Revision
	//	*DeleteReq_Options_NoStream
	//	*DeleteReq_Options_Any
	//	*DeleteReq_Options_StreamExists
	ExpectedStreamRevision isDeleteReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteReq_Options) Reset() {
	*x = DeleteReq_Options{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq_Options) ProtoMessage() {}

func (x *DeleteReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq_Options.ProtoReflect.Descriptor instead.
func (*DeleteReq_Options) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DeleteReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *DeleteReq_Options) GetExpectedStreamRevision() isDeleteReq_Options_ExpectedStreamRevision {
	if x != nil {
		return x.ExpectedStreamRevision
	}
	return nil
}

func (x *DeleteReq_Options) GetRevision() uint64 {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*DeleteReq_Options_Revision); ok {
			return x.Revision
		}
	}
	return 0
}

func (x *DeleteReq_Options) GetNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*DeleteReq_Options_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *DeleteReq_Options) GetAny() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*DeleteReq_Options_Any); ok {
			return x.Any
		}
	}
	return nil
}

func (x *DeleteReq_Options) GetStreamExists() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*DeleteReq_Options_StreamExists); ok {
			return x.StreamExists
		}
	}
	return nil
}

type isDeleteReq_Options_ExpectedStreamRevision interface {
	isDeleteReq_Options_ExpectedStreamRevision()
}

type DeleteReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type DeleteReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type DeleteReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type DeleteReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*DeleteReq_Options_Revision) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_NoStream) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_Any) isDeleteReq_Options_ExpectedStreamRevision() {}

func (*DeleteReq_Options_StreamExists) isDeleteReq_Options_ExpectedStreamRevision() {}

type DeleteResp_Position struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteResp_Position) Reset() {
	*x = DeleteResp_Position{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResp_Position) ProtoMessage() {}

func (x *DeleteResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResp_Position.ProtoReflect.Descriptor instead.
func (*DeleteResp_Position) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DeleteResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *DeleteResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

type TombstoneReq_Options struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	StreamIdentifier *shared.StreamIdentifier `protobuf:"bytes,1,opt,name=stream_identifier,json=streamIdentifier,proto3" json:"stream_identifier,omitempty"`
	// Types that are valid to be assigned to ExpectedStreamRevision:
	//
	//	*TombstoneReq_Options_Revision
	//	*TombstoneReq_Options_NoStream
	//	*TombstoneReq_Options_Any
	//	*TombstoneReq_Options_StreamExists
	ExpectedStreamRevision isTombstoneReq_Options_ExpectedStreamRevision `protobuf_oneof:"expected_stream_revision"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TombstoneReq_Options) Reset() {
	*x = TombstoneReq_Options{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TombstoneReq_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneReq_Options) ProtoMessage() {}

func (x *TombstoneReq_Options) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneReq_Options.ProtoReflect.Descriptor instead.
func (*TombstoneReq_Options) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{8, 0}
}

func (x *TombstoneReq_Options) GetStreamIdentifier() *shared.StreamIdentifier {
	if x != nil {
		return x.StreamIdentifier
	}
	return nil
}

func (x *TombstoneReq_Options) GetExpectedStreamRevision() isTombstoneReq_Options_ExpectedStreamRevision {
	if x != nil {
		return x.ExpectedStreamRevision
	}
	return nil
}

func (x *TombstoneReq_Options) GetRevision() uint64 {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*TombstoneReq_Options_Revision); ok {
			return x.Revision
		}
	}
	return 0
}

func (x *TombstoneReq_Options) GetNoStream() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*TombstoneReq_Options_NoStream); ok {
			return x.NoStream
		}
	}
	return nil
}

func (x *TombstoneReq_Options) GetAny() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*TombstoneReq_Options_Any); ok {
			return x.Any
		}
	}
	return nil
}

func (x *TombstoneReq_Options) GetStreamExists() *shared.Empty {
	if x != nil {
		if x, ok := x.ExpectedStreamRevision.(*TombstoneReq_Options_StreamExists); ok {
			return x.StreamExists
		}
	}
	return nil
}

type isTombstoneReq_Options_ExpectedStreamRevision interface {
	isTombstoneReq_Options_ExpectedStreamRevision()
}

type TombstoneReq_Options_Revision struct {
	Revision uint64 `protobuf:"varint,2,opt,name=revision,proto3,oneof"`
}

type TombstoneReq_Options_NoStream struct {
	NoStream *shared.Empty `protobuf:"bytes,3,opt,name=no_stream,json=noStream,proto3,oneof"`
}

type TombstoneReq_Options_Any struct {
	Any *shared.Empty `protobuf:"bytes,4,opt,name=any,proto3,oneof"`
}

type TombstoneReq_Options_StreamExists struct {
	StreamExists *shared.Empty `protobuf:"bytes,5,opt,name=stream_exists,json=streamExists,proto3,oneof"`
}

func (*TombstoneReq_Options_Revision) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_NoStream) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_Any) isTombstoneReq_Options_ExpectedStreamRevision() {}

func (*TombstoneReq_Options_StreamExists) isTombstoneReq_Options_ExpectedStreamRevision() {}

type TombstoneResp_Position struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommitPosition  uint64                 `protobuf:"varint,1,opt,name=commit_position,json=commitPosition,proto3" json:"commit_position,omitempty"`
	PreparePosition uint64                 `protobuf:"varint,2,opt,name=prepare_position,json=preparePosition,proto3" json:"prepare_position,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TombstoneResp_Position) Reset() {
	*x = TombstoneResp_Position{}
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TombstoneResp_Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TombstoneResp_Position) ProtoMessage() {}

func (x *TombstoneResp_Position) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v1_streams_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TombstoneResp_Position.ProtoReflect.Descriptor instead.
func (*TombstoneResp_Position) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TombstoneResp_Position) GetCommitPosition() uint64 {
	if x != nil {
		return x.CommitPosition
	}
	return 0
}

func (x *TombstoneResp_Position) GetPreparePosition() uint64 {
	if x != nil {
		return x.PreparePosition
	}
	return 0
}

var File_kurrentdb_protocols_v1_streams_proto protoreflect.FileDescriptor

const file_kurrentdb_protocols_v1_streams_proto_rawDesc = "" +
	"\n" +
	"$kurrentdb/protocols/v1/streams.proto\x12\x1aevent_store.client.streams\x1a#kurrentdb/protocols/v1/shared.proto\x1a#kurrentdb/protocols/v1/status.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xfb\x10\n" +
	"\aReadReq\x12E\n" +
	"\aoptions\x18\x01 \x01(\v2+.event_store.client.streams.ReadReq.OptionsR\aoptions\x1a\xa8\x10\n" +
	"\aOptions\x12S\n" +
	"\x06stream\x18\x01 \x01(\v29.event_store.client.streams.ReadReq.Options.StreamOptionsH\x00R\x06stream\x12J\n" +
	"\x03all\x18\x02 \x01(\v26.event_store.client.streams.ReadReq.Options.AllOptionsH\x00R\x03all\x12`\n" +
	"\x0eread_direction\x18\x03 \x01(\x0e29.event_store.client.streams.ReadReq.Options.ReadDirectionR\rreadDirection\x12#\n" +
	"\rresolve_links\x18\x04 \x01(\bR\fresolveLinks\x12\x16\n" +
	"\x05count\x18\x05 \x01(\x04H\x01R\x05count\x12e\n" +
	"\fsubscription\x18\x06 \x01(\v2?.event_store.client.streams.ReadReq.Options.SubscriptionOptionsH\x01R\fsubscription\x12S\n" +
	"\x06filter\x18\a \x01(\v29.event_store.client.streams.ReadReq.Options.FilterOptionsH\x02R\x06filter\x128\n" +
	"\tno_filter\x18\b \x01(\v2\x19.event_store.client.EmptyH\x02R\bnoFilter\x12W\n" +
	"\vuuid_option\x18\t \x01(\v26.event_store.client.streams.ReadReq.Options.UUIDOptionR\n" +
	"uuidOption\x12`\n" +
	"\x0econtrol_option\x18\n" +
	" \x01(\v29.event_store.client.streams.ReadReq.Options.ControlOptionR\rcontrolOption\x1a\xf5\x01\n" +
	"\rStreamOptions\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12\x1c\n" +
	"\brevision\x18\x02 \x01(\x04H\x00R\brevision\x121\n" +
	"\x05start\x18\x03 \x01(\v2\x19.event_store.client.EmptyH\x00R\x05start\x12-\n" +
	"\x03end\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x00R\x03endB\x11\n" +
	"\x0frevision_option\x1a\xd0\x01\n" +
	"\n" +
	"AllOptions\x12R\n" +
	"\bposition\x18\x01 \x01(\v24.event_store.client.streams.ReadReq.Options.PositionH\x00R\bposition\x121\n" +
	"\x05start\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\x05start\x12-\n" +
	"\x03end\x18\x03 \x01(\v2\x19.event_store.client.EmptyH\x00R\x03endB\f\n" +
	"\n" +
	"all_option\x1a\x15\n" +
	"\x13SubscriptionOptions\x1a^\n" +
	"\bPosition\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePosition\x1a\xc6\x03\n" +
	"\rFilterOptions\x12s\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2D.event_store.client.streams.ReadReq.Options.FilterOptions.ExpressionH\x00R\x10streamIdentifier\x12e\n" +
	"\n" +
	"event_type\x18\x02 \x01(\v2D.event_store.client.streams.ReadReq.Options.FilterOptions.ExpressionH\x00R\teventType\x12\x12\n" +
	"\x03max\x18\x03 \x01(\rH\x01R\x03max\x121\n" +
	"\x05count\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x01R\x05count\x12B\n" +
	"\x1ccheckpointIntervalMultiplier\x18\x05 \x01(\rR\x1ccheckpointIntervalMultiplier\x1a:\n" +
	"\n" +
	"Expression\x12\x14\n" +
	"\x05regex\x18\x01 \x01(\tR\x05regex\x12\x16\n" +
	"\x06prefix\x18\x02 \x03(\tR\x06prefixB\b\n" +
	"\x06filterB\b\n" +
	"\x06window\x1a\x89\x01\n" +
	"\n" +
	"UUIDOption\x12;\n" +
	"\n" +
	"structured\x18\x01 \x01(\v2\x19.event_store.client.EmptyH\x00R\n" +
	"structured\x123\n" +
	"\x06string\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\x06stringB\t\n" +
	"\acontent\x1a5\n" +
	"\rControlOption\x12$\n" +
	"\rcompatibility\x18\x01 \x01(\rR\rcompatibility\",\n" +
	"\rReadDirection\x12\f\n" +
	"\bForwards\x10\x00\x12\r\n" +
	"\tBackwards\x10\x01B\x0f\n" +
	"\rstream_optionB\x0e\n" +
	"\fcount_optionB\x0f\n" +
	"\rfilter_option\"\xf0\x12\n" +
	"\bReadResp\x12F\n" +
	"\x05event\x18\x01 \x01(\v2..event_store.client.streams.ReadResp.ReadEventH\x00R\x05event\x12c\n" +
	"\fconfirmation\x18\x02 \x01(\v2=.event_store.client.streams.ReadResp.SubscriptionConfirmationH\x00R\fconfirmation\x12Q\n" +
	"\n" +
	"checkpoint\x18\x03 \x01(\v2/.event_store.client.streams.ReadResp.CheckpointH\x00R\n" +
	"checkpoint\x12_\n" +
	"\x10stream_not_found\x18\x04 \x01(\v23.event_store.client.streams.ReadResp.StreamNotFoundH\x00R\x0estreamNotFound\x124\n" +
	"\x15first_stream_position\x18\x05 \x01(\x04H\x00R\x13firstStreamPosition\x122\n" +
	"\x14last_stream_position\x18\x06 \x01(\x04H\x00R\x12lastStreamPosition\x12`\n" +
	"\x18last_all_stream_position\x18\a \x01(\v2%.event_store.client.AllStreamPositionH\x00R\x15lastAllStreamPosition\x12L\n" +
	"\tcaught_up\x18\b \x01(\v2-.event_store.client.streams.ReadResp.CaughtUpH\x00R\bcaughtUp\x12R\n" +
	"\vfell_behind\x18\t \x01(\v2/.event_store.client.streams.ReadResp.FellBehindH\x00R\n" +
	"fellBehind\x1a\xe3\x01\n" +
	"\bCaughtUp\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12,\n" +
	"\x0fstream_revision\x18\x02 \x01(\x03H\x00R\x0estreamRevision\x88\x01\x01\x12N\n" +
	"\bposition\x18\x03 \x01(\v2-.event_store.client.streams.ReadResp.PositionH\x01R\bposition\x88\x01\x01B\x12\n" +
	"\x10_stream_revisionB\v\n" +
	"\t_position\x1a\xe5\x01\n" +
	"\n" +
	"FellBehind\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12,\n" +
	"\x0fstream_revision\x18\x02 \x01(\x03H\x00R\x0estreamRevision\x88\x01\x01\x12N\n" +
	"\bposition\x18\x03 \x01(\v2-.event_store.client.streams.ReadResp.PositionH\x01R\bposition\x88\x01\x01B\x12\n" +
	"\x10_stream_revisionB\v\n" +
	"\t_position\x1a\x94\x06\n" +
	"\tReadEvent\x12R\n" +
	"\x05event\x18\x01 \x01(\v2<.event_store.client.streams.ReadResp.ReadEvent.RecordedEventR\x05event\x12P\n" +
	"\x04link\x18\x02 \x01(\v2<.event_store.client.streams.ReadResp.ReadEvent.RecordedEventR\x04link\x12)\n" +
	"\x0fcommit_position\x18\x03 \x01(\x04H\x00R\x0ecommitPosition\x12<\n" +
	"\vno_position\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x00R\n" +
	"noPosition\x1a\xeb\x03\n" +
	"\rRecordedEvent\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.event_store.client.UUIDR\x02id\x12Q\n" +
	"\x11stream_identifier\x18\x02 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12'\n" +
	"\x0fstream_revision\x18\x03 \x01(\x04R\x0estreamRevision\x12)\n" +
	"\x10prepare_position\x18\x04 \x01(\x04R\x0fpreparePosition\x12'\n" +
	"\x0fcommit_position\x18\x05 \x01(\x04R\x0ecommitPosition\x12f\n" +
	"\bmetadata\x18\x06 \x03(\v2J.event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.MetadataEntryR\bmetadata\x12'\n" +
	"\x0fcustom_metadata\x18\a \x01(\fR\x0ecustomMetadata\x12\x12\n" +
	"\x04data\x18\b \x01(\fR\x04data\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\n" +
	"\n" +
	"\bposition\x1aC\n" +
	"\x18SubscriptionConfirmation\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x1a\x9a\x01\n" +
	"\n" +
	"Checkpoint\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePosition\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a^\n" +
	"\bPosition\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePosition\x1ac\n" +
	"\x0eStreamNotFound\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifierB\t\n" +
	"\acontent\"\xa2\x06\n" +
	"\tAppendReq\x12I\n" +
	"\aoptions\x18\x01 \x01(\v2-.event_store.client.streams.AppendReq.OptionsH\x00R\aoptions\x12b\n" +
	"\x10proposed_message\x18\x02 \x01(\v25.event_store.client.streams.AppendReq.ProposedMessageH\x00R\x0fproposedMessage\x1a\xc1\x02\n" +
	"\aOptions\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12\x1c\n" +
	"\brevision\x18\x02 \x01(\x04H\x00R\brevision\x128\n" +
	"\tno_stream\x18\x03 \x01(\v2\x19.event_store.client.EmptyH\x00R\bnoStream\x12-\n" +
	"\x03any\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x00R\x03any\x12@\n" +
	"\rstream_exists\x18\x05 \x01(\v2\x19.event_store.client.EmptyH\x00R\fstreamExistsB\x1a\n" +
	"\x18expected_stream_revision\x1a\x96\x02\n" +
	"\x0fProposedMessage\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.event_store.client.UUIDR\x02id\x12_\n" +
	"\bmetadata\x18\x02 \x03(\v2C.event_store.client.streams.AppendReq.ProposedMessage.MetadataEntryR\bmetadata\x12'\n" +
	"\x0fcustom_metadata\x18\x03 \x01(\fR\x0ecustomMetadata\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\t\n" +
	"\acontent\"\xbb\v\n" +
	"\n" +
	"AppendResp\x12J\n" +
	"\asuccess\x18\x01 \x01(\v2..event_store.client.streams.AppendResp.SuccessH\x00R\asuccess\x12s\n" +
	"\x16wrong_expected_version\x18\x02 \x01(\v2;.event_store.client.streams.AppendResp.WrongExpectedVersionH\x00R\x14wrongExpectedVersion\x1a^\n" +
	"\bPosition\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePosition\x1a\xab\x02\n" +
	"\aSuccess\x12+\n" +
	"\x10current_revision\x18\x01 \x01(\x04H\x00R\x0fcurrentRevision\x128\n" +
	"\tno_stream\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\bnoStream\x12M\n" +
	"\bposition\x18\x03 \x01(\v2/.event_store.client.streams.AppendResp.PositionH\x01R\bposition\x12<\n" +
	"\vno_position\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x01R\n" +
	"noPositionB\x19\n" +
	"\x17current_revision_optionB\x11\n" +
	"\x0fposition_option\x1a\xd3\x06\n" +
	"\x14WrongExpectedVersion\x126\n" +
	"\x17current_revision_20_6_0\x18\x01 \x01(\x04H\x00R\x13currentRevision2060\x12C\n" +
	"\x10no_stream_20_6_0\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\fnoStream2060\x128\n" +
	"\x18expected_revision_20_6_0\x18\x03 \x01(\x04H\x01R\x14expectedRevision2060\x128\n" +
	"\n" +
	"any_20_6_0\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x01R\aany2060\x12K\n" +
	"\x14stream_exists_20_6_0\x18\x05 \x01(\v2\x19.event_store.client.EmptyH\x01R\x10streamExists2060\x12+\n" +
	"\x10current_revision\x18\x06 \x01(\x04H\x02R\x0fcurrentRevision\x12G\n" +
	"\x11current_no_stream\x18\a \x01(\v2\x19.event_store.client.EmptyH\x02R\x0fcurrentNoStream\x12-\n" +
	"\x11expected_revision\x18\b \x01(\x04H\x03R\x10expectedRevision\x12>\n" +
	"\fexpected_any\x18\t \x01(\v2\x19.event_store.client.EmptyH\x03R\vexpectedAny\x12Q\n" +
	"\x16expected_stream_exists\x18\n" +
	" \x01(\v2\x19.event_store.client.EmptyH\x03R\x14expectedStreamExists\x12I\n" +
	"\x12expected_no_stream\x18\v \x01(\v2\x19.event_store.client.EmptyH\x03R\x10expectedNoStreamB \n" +
	"\x1ecurrent_revision_option_20_6_0B!\n" +
	"\x1fexpected_revision_option_20_6_0B\x19\n" +
	"\x17current_revision_optionB\x1a\n" +
	"\x18expected_revision_optionB\b\n" +
	"\x06result\"\x9c\b\n" +
	"\x0eBatchAppendReq\x12?\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\v2\x18.event_store.client.UUIDR\rcorrelationId\x12L\n" +
	"\aoptions\x18\x02 \x01(\v22.event_store.client.streams.BatchAppendReq.OptionsR\aoptions\x12g\n" +
	"\x11proposed_messages\x18\x03 \x03(\v2:.event_store.client.streams.BatchAppendReq.ProposedMessageR\x10proposedMessages\x12\x19\n" +
	"\bis_final\x18\x04 \x01(\bR\aisFinal\x1a\xd8\x03\n" +
	"\aOptions\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12)\n" +
	"\x0fstream_position\x18\x02 \x01(\x04H\x00R\x0estreamPosition\x125\n" +
	"\tno_stream\x18\x03 \x01(\v2\x16.google.protobuf.EmptyH\x00R\bnoStream\x12*\n" +
	"\x03any\x18\x04 \x01(\v2\x16.google.protobuf.EmptyH\x00R\x03any\x12=\n" +
	"\rstream_exists\x18\x05 \x01(\v2\x16.google.protobuf.EmptyH\x00R\fstreamExists\x12E\n" +
	"\x10deadline_21_10_0\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\rdeadline21100\x127\n" +
	"\bdeadline\x18\a \x01(\v2\x19.google.protobuf.DurationH\x01R\bdeadlineB\x1a\n" +
	"\x18expected_stream_positionB\x11\n" +
	"\x0fdeadline_option\x1a\x9b\x02\n" +
	"\x0fProposedMessage\x12(\n" +
	"\x02id\x18\x01 \x01(\v2\x18.event_store.client.UUIDR\x02id\x12d\n" +
	"\bmetadata\x18\x02 \x03(\v2H.event_store.client.streams.BatchAppendReq.ProposedMessage.MetadataEntryR\bmetadata\x12'\n" +
	"\x0fcustom_metadata\x18\x03 \x01(\fR\x0ecustomMetadata\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x06\n" +
	"\x0fBatchAppendResp\x12?\n" +
	"\x0ecorrelation_id\x18\x01 \x01(\v2\x18.event_store.client.UUIDR\rcorrelationId\x12*\n" +
	"\x05error\x18\x02 \x01(\v2\x12.google.rpc.StatusH\x00R\x05error\x12O\n" +
	"\asuccess\x18\x03 \x01(\v23.event_store.client.streams.BatchAppendResp.SuccessH\x00R\asuccess\x12Q\n" +
	"\x11stream_identifier\x18\x04 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12)\n" +
	"\x0fstream_position\x18\x05 \x01(\x04H\x01R\x0estreamPosition\x125\n" +
	"\tno_stream\x18\x06 \x01(\v2\x16.google.protobuf.EmptyH\x01R\bnoStream\x12*\n" +
	"\x03any\x18\a \x01(\v2\x16.google.protobuf.EmptyH\x01R\x03any\x12=\n" +
	"\rstream_exists\x18\b \x01(\v2\x16.google.protobuf.EmptyH\x01R\fstreamExists\x1a\x9b\x02\n" +
	"\aSuccess\x12+\n" +
	"\x10current_revision\x18\x01 \x01(\x04H\x00R\x0fcurrentRevision\x125\n" +
	"\tno_stream\x18\x02 \x01(\v2\x16.google.protobuf.EmptyH\x00R\bnoStream\x12C\n" +
	"\bposition\x18\x03 \x01(\v2%.event_store.client.AllStreamPositionH\x01R\bposition\x129\n" +
	"\vno_position\x18\x04 \x01(\v2\x16.google.protobuf.EmptyH\x01R\n" +
	"noPositionB\x19\n" +
	"\x17current_revision_optionB\x11\n" +
	"\x0fposition_optionB\b\n" +
	"\x06resultB\x1a\n" +
	"\x18expected_stream_position\"\x98\x03\n" +
	"\tDeleteReq\x12G\n" +
	"\aoptions\x18\x01 \x01(\v2-.event_store.client.streams.DeleteReq.OptionsR\aoptions\x1a\xc1\x02\n" +
	"\aOptions\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12\x1c\n" +
	"\brevision\x18\x02 \x01(\x04H\x00R\brevision\x128\n" +
	"\tno_stream\x18\x03 \x01(\v2\x19.event_store.client.EmptyH\x00R\bnoStream\x12-\n" +
	"\x03any\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x00R\x03any\x12@\n" +
	"\rstream_exists\x18\x05 \x01(\v2\x19.event_store.client.EmptyH\x00R\fstreamExistsB\x1a\n" +
	"\x18expected_stream_revision\"\x8c\x02\n" +
	"\n" +
	"DeleteResp\x12M\n" +
	"\bposition\x18\x01 \x01(\v2/.event_store.client.streams.DeleteResp.PositionH\x00R\bposition\x12<\n" +
	"\vno_position\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\n" +
	"noPosition\x1a^\n" +
	"\bPosition\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePositionB\x11\n" +
	"\x0fposition_option\"\x9e\x03\n" +
	"\fTombstoneReq\x12J\n" +
	"\aoptions\x18\x01 \x01(\v20.event_store.client.streams.TombstoneReq.OptionsR\aoptions\x1a\xc1\x02\n" +
	"\aOptions\x12Q\n" +
	"\x11stream_identifier\x18\x01 \x01(\v2$.event_store.client.StreamIdentifierR\x10streamIdentifier\x12\x1c\n" +
	"\brevision\x18\x02 \x01(\x04H\x00R\brevision\x128\n" +
	"\tno_stream\x18\x03 \x01(\v2\x19.event_store.client.EmptyH\x00R\bnoStream\x12-\n" +
	"\x03any\x18\x04 \x01(\v2\x19.event_store.client.EmptyH\x00R\x03any\x12@\n" +
	"\rstream_exists\x18\x05 \x01(\v2\x19.event_store.client.EmptyH\x00R\fstreamExistsB\x1a\n" +
	"\x18expected_stream_revision\"\x92\x02\n" +
	"\rTombstoneResp\x12P\n" +
	"\bposition\x18\x01 \x01(\v22.event_store.client.streams.TombstoneResp.PositionH\x00R\bposition\x12<\n" +
	"\vno_position\x18\x02 \x01(\v2\x19.event_store.client.EmptyH\x00R\n" +
	"noPosition\x1a^\n" +
	"\bPosition\x12'\n" +
	"\x0fcommit_position\x18\x01 \x01(\x04R\x0ecommitPosition\x12)\n" +
	"\x10prepare_position\x18\x02 \x01(\x04R\x0fpreparePositionB\x11\n" +
	"\x0fposition_option2\xe0\x03\n" +
	"\aStreams\x12S\n" +
	"\x04Read\x12#.event_store.client.streams.ReadReq\x1a$.event_store.client.streams.ReadResp0\x01\x12Y\n" +
	"\x06Append\x12%.event_store.client.streams.AppendReq\x1a&.event_store.client.streams.AppendResp(\x01\x12W\n" +
	"\x06Delete\x12%.event_store.client.streams.DeleteReq\x1a&.event_store.client.streams.DeleteResp\x12`\n" +
	"\tTombstone\x12(.event_store.client.streams.TombstoneReq\x1a).event_store.client.streams.TombstoneResp\x12j\n" +
	"\vBatchAppend\x12*.event_store.client.streams.BatchAppendReq\x1a+.event_store.client.streams.BatchAppendResp(\x010\x01B\x80\x01\n" +
	"%com.eventstore.dbclient.proto.streamsZWgithub.com/kurrent-io/KurrentDB-Client-Go/protos/kurrentdb/protocols/v1/streams;streamsb\x06proto3"

var (
	file_kurrentdb_protocols_v1_streams_proto_rawDescOnce sync.Once
	file_kurrentdb_protocols_v1_streams_proto_rawDescData []byte
)

func file_kurrentdb_protocols_v1_streams_proto_rawDescGZIP() []byte {
	file_kurrentdb_protocols_v1_streams_proto_rawDescOnce.Do(func() {
		file_kurrentdb_protocols_v1_streams_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v1_streams_proto_rawDesc), len(file_kurrentdb_protocols_v1_streams_proto_rawDesc)))
	})
	return file_kurrentdb_protocols_v1_streams_proto_rawDescData
}

var file_kurrentdb_protocols_v1_streams_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kurrentdb_protocols_v1_streams_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_kurrentdb_protocols_v1_streams_proto_goTypes = []any{
	(ReadReq_Options_ReadDirection)(0),               // 0: event_store.client.streams.ReadReq.Options.ReadDirection
	(*ReadReq)(nil),                                  // 1: event_store.client.streams.ReadReq
	(*ReadResp)(nil),                                 // 2: event_store.client.streams.ReadResp
	(*AppendReq)(nil),                                // 3: event_store.client.streams.AppendReq
	(*AppendResp)(nil),                               // 4: event_store.client.streams.AppendResp
	(*BatchAppendReq)(nil),                           // 5: event_store.client.streams.BatchAppendReq
	(*BatchAppendResp)(nil),                          // 6: event_store.client.streams.BatchAppendResp
	(*DeleteReq)(nil),                                // 7: event_store.client.streams.DeleteReq
	(*DeleteResp)(nil),                               // 8: event_store.client.streams.DeleteResp
	(*TombstoneReq)(nil),                             // 9: event_store.client.streams.TombstoneReq
	(*TombstoneResp)(nil),                            // 10: event_store.client.streams.TombstoneResp
	(*ReadReq_Options)(nil),                          // 11: event_store.client.streams.ReadReq.Options
	(*ReadReq_Options_StreamOptions)(nil),            // 12: event_store.client.streams.ReadReq.Options.StreamOptions
	(*ReadReq_Options_AllOptions)(nil),               // 13: event_store.client.streams.ReadReq.Options.AllOptions
	(*ReadReq_Options_SubscriptionOptions)(nil),      // 14: event_store.client.streams.ReadReq.Options.SubscriptionOptions
	(*ReadReq_Options_Position)(nil),                 // 15: event_store.client.streams.ReadReq.Options.Position
	(*ReadReq_Options_FilterOptions)(nil),            // 16: event_store.client.streams.ReadReq.Options.FilterOptions
	(*ReadReq_Options_UUIDOption)(nil),               // 17: event_store.client.streams.ReadReq.Options.UUIDOption
	(*ReadReq_Options_ControlOption)(nil),            // 18: event_store.client.streams.ReadReq.Options.ControlOption
	(*ReadReq_Options_FilterOptions_Expression)(nil), // 19: event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	(*ReadResp_CaughtUp)(nil),                        // 20: event_store.client.streams.ReadResp.CaughtUp
	(*ReadResp_FellBehind)(nil),                      // 21: event_store.client.streams.ReadResp.FellBehind
	(*ReadResp_ReadEvent)(nil),                       // 22: event_store.client.streams.ReadResp.ReadEvent
	(*ReadResp_SubscriptionConfirmation)(nil),        // 23: event_store.client.streams.ReadResp.SubscriptionConfirmation
	(*ReadResp_Checkpoint)(nil),                      // 24: event_store.client.streams.ReadResp.Checkpoint
	(*ReadResp_Position)(nil),                        // 25: event_store.client.streams.ReadResp.Position
	(*ReadResp_StreamNotFound)(nil),                  // 26: event_store.client.streams.ReadResp.StreamNotFound
	(*ReadResp_ReadEvent_RecordedEvent)(nil),         // 27: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	nil,                                              // 28: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.MetadataEntry
	(*AppendReq_Options)(nil),                        // 29: event_store.client.streams.AppendReq.Options
	(*AppendReq_ProposedMessage)(nil),                // 30: event_store.client.streams.AppendReq.ProposedMessage
	nil,                                              // 31: event_store.client.streams.AppendReq.ProposedMessage.MetadataEntry
	(*AppendResp_Position)(nil),                      // 32: event_store.client.streams.AppendResp.Position
	(*AppendResp_Success)(nil),                       // 33: event_store.client.streams.AppendResp.Success
	(*AppendResp_WrongExpectedVersion)(nil),          // 34: event_store.client.streams.AppendResp.WrongExpectedVersion
	(*BatchAppendReq_Options)(nil),                   // 35: event_store.client.streams.BatchAppendReq.Options
	(*BatchAppendReq_ProposedMessage)(nil),           // 36: event_store.client.streams.BatchAppendReq.ProposedMessage
	nil,                                              // 37: event_store.client.streams.BatchAppendReq.ProposedMessage.MetadataEntry
	(*BatchAppendResp_Success)(nil),                  // 38: event_store.client.streams.BatchAppendResp.Success
	(*DeleteReq_Options)(nil),                        // 39: event_store.client.streams.DeleteReq.Options
	(*DeleteResp_Position)(nil),                      // 40: event_store.client.streams.DeleteResp.Position
	(*TombstoneReq_Options)(nil),                     // 41: event_store.client.streams.TombstoneReq.Options
	(*TombstoneResp_Position)(nil),                   // 42: event_store.client.streams.TombstoneResp.Position
	(*shared.AllStreamPosition)(nil),                 // 43: event_store.client.AllStreamPosition
	(*shared.UUID)(nil),                              // 44: event_store.client.UUID
	(*status.Status)(nil),                            // 45: google.rpc.Status
	(*shared.StreamIdentifier)(nil),                  // 46: event_store.client.StreamIdentifier
	(*emptypb.Empty)(nil),                            // 47: google.protobuf.Empty
	(*shared.Empty)(nil),                             // 48: event_store.client.Empty
	(*timestamppb.Timestamp)(nil),                    // 49: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                      // 50: google.protobuf.Duration
}
var file_kurrentdb_protocols_v1_streams_proto_depIdxs = []int32{
	11, // 0: event_store.client.streams.ReadReq.options:type_name -> event_store.client.streams.ReadReq.Options
	22, // 1: event_store.client.streams.ReadResp.event:type_name -> event_store.client.streams.ReadResp.ReadEvent
	23, // 2: event_store.client.streams.ReadResp.confirmation:type_name -> event_store.client.streams.ReadResp.SubscriptionConfirmation
	24, // 3: event_store.client.streams.ReadResp.checkpoint:type_name -> event_store.client.streams.ReadResp.Checkpoint
	26, // 4: event_store.client.streams.ReadResp.stream_not_found:type_name -> event_store.client.streams.ReadResp.StreamNotFound
	43, // 5: event_store.client.streams.ReadResp.last_all_stream_position:type_name -> event_store.client.AllStreamPosition
	20, // 6: event_store.client.streams.ReadResp.caught_up:type_name -> event_store.client.streams.ReadResp.CaughtUp
	21, // 7: event_store.client.streams.ReadResp.fell_behind:type_name -> event_store.client.streams.ReadResp.FellBehind
	29, // 8: event_store.client.streams.AppendReq.options:type_name -> event_store.client.streams.AppendReq.Options
	30, // 9: event_store.client.streams.AppendReq.proposed_message:type_name -> event_store.client.streams.AppendReq.ProposedMessage
	33, // 10: event_store.client.streams.AppendResp.success:type_name -> event_store.client.streams.AppendResp.Success
	34, // 11: event_store.client.streams.AppendResp.wrong_expected_version:type_name -> event_store.client.streams.AppendResp.WrongExpectedVersion
	44, // 12: event_store.client.streams.BatchAppendReq.correlation_id:type_name -> event_store.client.UUID
	35, // 13: event_store.client.streams.BatchAppendReq.options:type_name -> event_store.client.streams.BatchAppendReq.Options
	36, // 14: event_store.client.streams.BatchAppendReq.proposed_messages:type_name -> event_store.client.streams.BatchAppendReq.ProposedMessage
	44, // 15: event_store.client.streams.BatchAppendResp.correlation_id:type_name -> event_store.client.UUID
	45, // 16: event_store.client.streams.BatchAppendResp.error:type_name -> google.rpc.Status
	38, // 17: event_store.client.streams.BatchAppendResp.success:type_name -> event_store.client.streams.BatchAppendResp.Success
	46, // 18: event_store.client.streams.BatchAppendResp.stream_identifier:type_name -> event_store.client.StreamIdentifier
	47, // 19: event_store.client.streams.BatchAppendResp.no_stream:type_name -> google.protobuf.Empty
	47, // 20: event_store.client.streams.BatchAppendResp.any:type_name -> google.protobuf.Empty
	47, // 21: event_store.client.streams.BatchAppendResp.stream_exists:type_name -> google.protobuf.Empty
	39, // 22: event_store.client.streams.DeleteReq.options:type_name -> event_store.client.streams.DeleteReq.Options
	40, // 23: event_store.client.streams.DeleteResp.position:type_name -> event_store.client.streams.DeleteResp.Position
	48, // 24: event_store.client.streams.DeleteResp.no_position:type_name -> event_store.client.Empty
	41, // 25: event_store.client.streams.TombstoneReq.options:type_name -> event_store.client.streams.TombstoneReq.Options
	42, // 26: event_store.client.streams.TombstoneResp.position:type_name -> event_store.client.streams.TombstoneResp.Position
	48, // 27: event_store.client.streams.TombstoneResp.no_position:type_name -> event_store.client.Empty
	12, // 28: event_store.client.streams.ReadReq.Options.stream:type_name -> event_store.client.streams.ReadReq.Options.StreamOptions
	13, // 29: event_store.client.streams.ReadReq.Options.all:type_name -> event_store.client.streams.ReadReq.Options.AllOptions
	0,  // 30: event_store.client.streams.ReadReq.Options.read_direction:type_name -> event_store.client.streams.ReadReq.Options.ReadDirection
	14, // 31: event_store.client.streams.ReadReq.Options.subscription:type_name -> event_store.client.streams.ReadReq.Options.SubscriptionOptions
	16, // 32: event_store.client.streams.ReadReq.Options.filter:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions
	48, // 33: event_store.client.streams.ReadReq.Options.no_filter:type_name -> event_store.client.Empty
	17, // 34: event_store.client.streams.ReadReq.Options.uuid_option:type_name -> event_store.client.streams.ReadReq.Options.UUIDOption
	18, // 35: event_store.client.streams.ReadReq.Options.control_option:type_name -> event_store.client.streams.ReadReq.Options.ControlOption
	46, // 36: event_store.client.streams.ReadReq.Options.StreamOptions.stream_identifier:type_name -> event_store.client.StreamIdentifier
	48, // 37: event_store.client.streams.ReadReq.Options.StreamOptions.start:type_name -> event_store.client.Empty
	48, // 38: event_store.client.streams.ReadReq.Options.StreamOptions.end:type_name -> event_store.client.Empty
	15, // 39: event_store.client.streams.ReadReq.Options.AllOptions.position:type_name -> event_store.client.streams.ReadReq.Options.Position
	48, // 40: event_store.client.streams.ReadReq.Options.AllOptions.start:type_name -> event_store.client.Empty
	48, // 41: event_store.client.streams.ReadReq.Options.AllOptions.end:type_name -> event_store.client.Empty
	19, // 42: event_store.client.streams.ReadReq.Options.FilterOptions.stream_identifier:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	19, // 43: event_store.client.streams.ReadReq.Options.FilterOptions.event_type:type_name -> event_store.client.streams.ReadReq.Options.FilterOptions.Expression
	48, // 44: event_store.client.streams.ReadReq.Options.FilterOptions.count:type_name -> event_store.client.Empty
	48, // 45: event_store.client.streams.ReadReq.Options.UUIDOption.structured:type_name -> event_store.client.Empty
	48, // 46: event_store.client.streams.ReadReq.Options.UUIDOption.string:type_name -> event_store.client.Empty
	49, // 47: event_store.client.streams.ReadResp.CaughtUp.timestamp:type_name -> google.protobuf.Timestamp
	25, // 48: event_store.client.streams.ReadResp.CaughtUp.position:type_name -> event_store.client.streams.ReadResp.Position
	49, // 49: event_store.client.streams.ReadResp.FellBehind.timestamp:type_name -> google.protobuf.Timestamp
	25, // 50: event_store.client.streams.ReadResp.FellBehind.position:type_name -> event_store.client.streams.ReadResp.Position
	27, // 51: event_store.client.streams.ReadResp.ReadEvent.event:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	27, // 52: event_store.client.streams.ReadResp.ReadEvent.link:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent
	48, // 53: event_store.client.streams.ReadResp.ReadEvent.no_position:type_name -> event_store.client.Empty
	49, // 54: event_store.client.streams.ReadResp.Checkpoint.timestamp:type_name -> google.protobuf.Timestamp
	46, // 55: event_store.client.streams.ReadResp.StreamNotFound.stream_identifier:type_name -> event_store.client.StreamIdentifier
	44, // 56: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.id:type_name -> event_store.client.UUID
	46, // 57: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.stream_identifier:type_name -> event_store.client.StreamIdentifier
	28, // 58: event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.metadata:type_name -> event_store.client.streams.ReadResp.ReadEvent.RecordedEvent.MetadataEntry
	46, // 59: event_store.client.streams.AppendReq.Options.stream_identifier:type_name -> event_store.client.StreamIdentifier
	48, // 60: event_store.client.streams.AppendReq.Options.no_stream:type_name -> event_store.client.Empty
	48, // 61: event_store.client.streams.AppendReq.Options.any:type_name -> event_store.client.Empty
	48, // 62: event_store.client.streams.AppendReq.Options.stream_exists:type_name -> event_store.client.Empty
	44, // 63: event_store.client.streams.AppendReq.ProposedMessage.id:type_name -> event_store.client.UUID
	31, // 64: event_store.client.streams.AppendReq.ProposedMessage.metadata:type_name -> event_store.client.streams.AppendReq.ProposedMessage.MetadataEntry
	48, // 65: event_store.client.streams.AppendResp.Success.no_stream:type_name -> event_store.client.Empty
	32, // 66: event_store.client.streams.AppendResp.Success.position:type_name -> event_store.client.streams.AppendResp.Position
	48, // 67: event_store.client.streams.AppendResp.Success.no_position:type_name -> event_store.client.Empty
	48, // 68: event_store.client.streams.AppendResp.WrongExpectedVersion.no_stream_20_6_0:type_name -> event_store.client.Empty
	48, // 69: event_store.client.streams.AppendResp.WrongExpectedVersion.any_20_6_0:type_name -> event_store.client.Empty
	48, // 70: event_store.client.streams.AppendResp.WrongExpectedVersion.stream_exists_20_6_0:type_name -> event_store.client.Empty
	48, // 71: event_store.client.streams.AppendResp.WrongExpectedVersion.current_no_stream:type_name -> event_store.client.Empty
	48, // 72: event_store.client.streams.AppendResp.WrongExpectedVersion.expected_any:type_name -> event_store.client.Empty
	48, // 73: event_store.client.streams.AppendResp.WrongExpectedVersion.expected_stream_exists:type_name -> event_store.client.Empty
	48, // 74: event_store.client.streams.AppendResp.WrongExpectedVersion.expected_no_stream:type_name -> event_store.client.Empty
	46, // 75: event_store.client.streams.BatchAppendReq.Options.stream_identifier:type_name -> event_store.client.StreamIdentifier
	47, // 76: event_store.client.streams.BatchAppendReq.Options.no_stream:type_name -> google.protobuf.Empty
	47, // 77: event_store.client.streams.BatchAppendReq.Options.any:type_name -> google.protobuf.Empty
	47, // 78: event_store.client.streams.BatchAppendReq.Options.stream_exists:type_name -> google.protobuf.Empty
	49, // 79: event_store.client.streams.BatchAppendReq.Options.deadline_21_10_0:type_name -> google.protobuf.Timestamp
	50, // 80: event_store.client.streams.BatchAppendReq.Options.deadline:type_name -> google.protobuf.Duration
	44, // 81: event_store.client.streams.BatchAppendReq.ProposedMessage.id:type_name -> event_store.client.UUID
	37, // 82: event_store.client.streams.BatchAppendReq.ProposedMessage.metadata:type_name -> event_store.client.streams.BatchAppendReq.ProposedMessage.MetadataEntry
	47, // 83: event_store.client.streams.BatchAppendResp.Success.no_stream:type_name -> google.protobuf.Empty
	43, // 84: event_store.client.streams.BatchAppendResp.Success.position:type_name -> event_store.client.AllStreamPosition
	47, // 85: event_store.client.streams.BatchAppendResp.Success.no_position:type_name -> google.protobuf.Empty
	46, // 86: event_store.client.streams.DeleteReq.Options.stream_identifier:type_name -> event_store.client.StreamIdentifier
	48, // 87: event_store.client.streams.DeleteReq.Options.no_stream:type_name -> event_store.client.Empty
	48, // 88: event_store.client.streams.DeleteReq.Options.any:type_name -> event_store.client.Empty
	48, // 89: event_store.client.streams.DeleteReq.Options.stream_exists:type_name -> event_store.client.Empty
	46, // 90: event_store.client.streams.TombstoneReq.Options.stream_identifier:type_name -> event_store.client.StreamIdentifier
	48, // 91: event_store.client.streams.TombstoneReq.Options.no_stream:type_name -> event_store.client.Empty
	48, // 92: event_store.client.streams.TombstoneReq.Options.any:type_name -> event_store.client.Empty
	48, // 93: event_store.client.streams.TombstoneReq.Options.stream_exists:type_name -> event_store.client.Empty
	1,  // 94: event_store.client.streams.Streams.Read:input_type -> event_store.client.streams.ReadReq
	3,  // 95: event_store.client.streams.Streams.Append:input_type -> event_store.client.streams.AppendReq
	7,  // 96: event_store.client.streams.Streams.Delete:input_type -> event_store.client.streams.DeleteReq
	9,  // 97: event_store.client.streams.Streams.Tombstone:input_type -> event_store.client.streams.TombstoneReq
	5,  // 98: event_store.client.streams.Streams.BatchAppend:input_type -> event_store.client.streams.BatchAppendReq
	2,  // 99: event_store.client.streams.Streams.Read:output_type -> event_store.client.streams.ReadResp
	4,  // 100: event_store.client.streams.Streams.Append:output_type -> event_store.client.streams.AppendResp
	8,  // 101: event_store.client.streams.Streams.Delete:output_type -> event_store.client.streams.DeleteResp
	10, // 102: event_store.client.streams.Streams.Tombstone:output_type -> event_store.client.streams.TombstoneResp
	6,  // 103: event_store.client.streams.Streams.BatchAppend:output_type -> event_store.client.streams.BatchAppendResp
	99, // [99:104] is the sub-list for method output_type
	94, // [94:99] is the sub-list for method input_type
	94, // [94:94] is the sub-list for extension type_name
	94, // [94:94] is the sub-list for extension extendee
	0,  // [0:94] is the sub-list for field type_name
}

func init() { file_kurrentdb_protocols_v1_streams_proto_init() }
func file_kurrentdb_protocols_v1_streams_proto_init() {
	if File_kurrentdb_protocols_v1_streams_proto != nil {
		return
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[1].OneofWrappers = []any{
		(*ReadResp_Event)(nil),
		(*ReadResp_Confirmation)(nil),
		(*ReadResp_Checkpoint_)(nil),
		(*ReadResp_StreamNotFound_)(nil),
		(*ReadResp_FirstStreamPosition)(nil),
		(*ReadResp_LastStreamPosition)(nil),
		(*ReadResp_LastAllStreamPosition)(nil),
		(*ReadResp_CaughtUp_)(nil),
		(*ReadResp_FellBehind_)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[2].OneofWrappers = []any{
		(*AppendReq_Options_)(nil),
		(*AppendReq_ProposedMessage_)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[3].OneofWrappers = []any{
		(*AppendResp_Success_)(nil),
		(*AppendResp_WrongExpectedVersion_)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[5].OneofWrappers = []any{
		(*BatchAppendResp_Error)(nil),
		(*BatchAppendResp_Success_)(nil),
		(*BatchAppendResp_StreamPosition)(nil),
		(*BatchAppendResp_NoStream)(nil),
		(*BatchAppendResp_Any)(nil),
		(*BatchAppendResp_StreamExists)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[7].OneofWrappers = []any{
		(*DeleteResp_Position_)(nil),
		(*DeleteResp_NoPosition)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[9].OneofWrappers = []any{
		(*TombstoneResp_Position_)(nil),
		(*TombstoneResp_NoPosition)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[10].OneofWrappers = []any{
		(*ReadReq_Options_Stream)(nil),
		(*ReadReq_Options_All)(nil),
		(*ReadReq_Options_Count)(nil),
		(*ReadReq_Options_Subscription)(nil),
		(*ReadReq_Options_Filter)(nil),
		(*ReadReq_Options_NoFilter)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[11].OneofWrappers = []any{
		(*ReadReq_Options_StreamOptions_Revision)(nil),
		(*ReadReq_Options_StreamOptions_Start)(nil),
		(*ReadReq_Options_StreamOptions_End)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[12].OneofWrappers = []any{
		(*ReadReq_Options_AllOptions_Position)(nil),
		(*ReadReq_Options_AllOptions_Start)(nil),
		(*ReadReq_Options_AllOptions_End)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[15].OneofWrappers = []any{
		(*ReadReq_Options_FilterOptions_StreamIdentifier)(nil),
		(*ReadReq_Options_FilterOptions_EventType)(nil),
		(*ReadReq_Options_FilterOptions_Max)(nil),
		(*ReadReq_Options_FilterOptions_Count)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[16].OneofWrappers = []any{
		(*ReadReq_Options_UUIDOption_Structured)(nil),
		(*ReadReq_Options_UUIDOption_String_)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[19].OneofWrappers = []any{}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[20].OneofWrappers = []any{}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[21].OneofWrappers = []any{
		(*ReadResp_ReadEvent_CommitPosition)(nil),
		(*ReadResp_ReadEvent_NoPosition)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[28].OneofWrappers = []any{
		(*AppendReq_Options_Revision)(nil),
		(*AppendReq_Options_NoStream)(nil),
		(*AppendReq_Options_Any)(nil),
		(*AppendReq_Options_StreamExists)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[32].OneofWrappers = []any{
		(*AppendResp_Success_CurrentRevision)(nil),
		(*AppendResp_Success_NoStream)(nil),
		(*AppendResp_Success_Position)(nil),
		(*AppendResp_Success_NoPosition)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[33].OneofWrappers = []any{
		(*AppendResp_WrongExpectedVersion_CurrentRevision_20_6_0)(nil),
		(*AppendResp_WrongExpectedVersion_NoStream_20_6_0)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedRevision_20_6_0)(nil),
		(*AppendResp_WrongExpectedVersion_Any_20_6_0)(nil),
		(*AppendResp_WrongExpectedVersion_StreamExists_20_6_0)(nil),
		(*AppendResp_WrongExpectedVersion_CurrentRevision)(nil),
		(*AppendResp_WrongExpectedVersion_CurrentNoStream)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedRevision)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedAny)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedStreamExists)(nil),
		(*AppendResp_WrongExpectedVersion_ExpectedNoStream)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[34].OneofWrappers = []any{
		(*BatchAppendReq_Options_StreamPosition)(nil),
		(*BatchAppendReq_Options_NoStream)(nil),
		(*BatchAppendReq_Options_Any)(nil),
		(*BatchAppendReq_Options_StreamExists)(nil),
		(*BatchAppendReq_Options_Deadline_21_10_0)(nil),
		(*BatchAppendReq_Options_Deadline)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[37].OneofWrappers = []any{
		(*BatchAppendResp_Success_CurrentRevision)(nil),
		(*BatchAppendResp_Success_NoStream)(nil),
		(*BatchAppendResp_Success_Position)(nil),
		(*BatchAppendResp_Success_NoPosition)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[38].OneofWrappers = []any{
		(*DeleteReq_Options_Revision)(nil),
		(*DeleteReq_Options_NoStream)(nil),
		(*DeleteReq_Options_Any)(nil),
		(*DeleteReq_Options_StreamExists)(nil),
	}
	file_kurrentdb_protocols_v1_streams_proto_msgTypes[40].OneofWrappers = []any{
		(*TombstoneReq_Options_Revision)(nil),
		(*TombstoneReq_Options_NoStream)(nil),
		(*TombstoneReq_Options_Any)(nil),
		(*TombstoneReq_Options_StreamExists)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v1_streams_proto_rawDesc), len(file_kurrentdb_protocols_v1_streams_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kurrentdb_protocols_v1_streams_proto_goTypes,
		DependencyIndexes: file_kurrentdb_protocols_v1_streams_proto_depIdxs,
		EnumInfos:         file_kurrentdb_protocols_v1_streams_proto_enumTypes,
		MessageInfos:      file_kurrentdb_protocols_v1_streams_proto_msgTypes,
	}.Build()
	File_kurrentdb_protocols_v1_streams_proto = out.File
	file_kurrentdb_protocols_v1_streams_proto_goTypes = nil
	file_kurrentdb_protocols_v1_streams_proto_depIdxs = nil
}
