// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.0
// source: kurrentdb/protocols/v2/features/service.proto

//*
// KurrentDB Server Features Protocol
//
// This protocol defines services and messages for discovering server features
// in a KurrentDB environment. It enables clients to adapt their behavior based
// on server features, their enablement status, and requirements.

package service

import (
	core "github.com/kurrent-io/KurrentDB-Client-Go/protos/kurrentdb/protocols/v2/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Defines how requirements are enforced.
type PolicyStatus int32

const (
	// Feature is optional with no warnings
	PolicyStatus_OPTIONAL PolicyStatus = 0
	// Feature must be enabled; operations rejected if disabled
	PolicyStatus_REQUIRED PolicyStatus = 3
	// Feature must be disabled; operations rejected if enabled
	PolicyStatus_PROHIBITED PolicyStatus = 4
)

// Enum value maps for PolicyStatus.
var (
	PolicyStatus_name = map[int32]string{
		0: "OPTIONAL",
		3: "REQUIRED",
		4: "PROHIBITED",
	}
	PolicyStatus_value = map[string]int32{
		"OPTIONAL":   0,
		"REQUIRED":   3,
		"PROHIBITED": 4,
	}
)

func (x PolicyStatus) Enum() *PolicyStatus {
	p := new(PolicyStatus)
	*p = x
	return p
}

func (x PolicyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kurrentdb_protocols_v2_features_service_proto_enumTypes[0].Descriptor()
}

func (PolicyStatus) Type() protoreflect.EnumType {
	return &file_kurrentdb_protocols_v2_features_service_proto_enumTypes[0]
}

func (x PolicyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyStatus.Descriptor instead.
func (PolicyStatus) EnumDescriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{0}
}

// *
// Contains server version information, build details, and compatibility requirements.
type ServerMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Semantic version of the server software
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Build identifier or hash
	Build string `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// Minimum client version required for compatibility
	MinCompatibleClientVersion string `protobuf:"bytes,3,opt,name=min_compatible_client_version,json=minCompatibleClientVersion,proto3" json:"min_compatible_client_version,omitempty"`
	// Unique identifier for this server node
	NodeId        string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMetadata) Reset() {
	*x = ServerMetadata{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMetadata) ProtoMessage() {}

func (x *ServerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMetadata.ProtoReflect.Descriptor instead.
func (*ServerMetadata) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{0}
}

func (x *ServerMetadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerMetadata) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *ServerMetadata) GetMinCompatibleClientVersion() string {
	if x != nil {
		return x.MinCompatibleClientVersion
	}
	return ""
}

func (x *ServerMetadata) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// *
// Request message for retrieving server information.
type ServerInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Client version making the request
	ClientVersion string `protobuf:"bytes,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	// Unique client identifier
	ClientId      string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoRequest) Reset() {
	*x = ServerInfoRequest{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoRequest) ProtoMessage() {}

func (x *ServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoRequest.ProtoReflect.Descriptor instead.
func (*ServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{1}
}

func (x *ServerInfoRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ServerInfoRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

// *
// Response containing server information.
type ServerInfoResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server information and features
	Info          *ServerInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoResponse) Reset() {
	*x = ServerInfoResponse{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoResponse) ProtoMessage() {}

func (x *ServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoResponse.ProtoReflect.Descriptor instead.
func (*ServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{2}
}

func (x *ServerInfoResponse) GetInfo() *ServerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// *
// Top-level server information container including metadata
// and available features.
type ServerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Server metadata (version, build info, etc.)
	Metadata *ServerMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Features organized by namespace
	Features      map[string]*FeaturesList `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{3}
}

func (x *ServerInfo) GetMetadata() *ServerMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ServerInfo) GetFeatures() map[string]*FeaturesList {
	if x != nil {
		return x.Features
	}
	return nil
}

// *
// Container for features within a specific namespace.
type FeaturesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Features in this namespace
	Features      []*Feature `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeaturesList) Reset() {
	*x = FeaturesList{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeaturesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturesList) ProtoMessage() {}

func (x *FeaturesList) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturesList.ProtoReflect.Descriptor instead.
func (*FeaturesList) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{4}
}

func (x *FeaturesList) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

// *
// Defines a specific server feature with its enablement status,
// requirements, and metadata.
type Feature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this feature
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable description of the feature
	Description *string `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Whether this feature is currently enabled
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Whether this feature is deprecated and may be removed in future versions
	Deprecated bool `protobuf:"varint,4,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	// Requirements associated with this feature that clients must satisfy
	Requirements []*FeatureRequirement `protobuf:"bytes,5,rep,name=requirements,proto3" json:"requirements,omitempty"`
	// Whether clients can request changes to this feature's enabled status
	ClientConfigurable bool `protobuf:"varint,6,opt,name=client_configurable,json=clientConfigurable,proto3" json:"client_configurable,omitempty"`
	// For temporary features, indicates when the feature will no longer be available
	AvailableUntil *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=available_until,json=availableUntil,proto3,oneof" json:"available_until,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Feature) Reset() {
	*x = Feature{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{5}
}

func (x *Feature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Feature) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Feature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Feature) GetDeprecated() bool {
	if x != nil {
		return x.Deprecated
	}
	return false
}

func (x *Feature) GetRequirements() []*FeatureRequirement {
	if x != nil {
		return x.Requirements
	}
	return nil
}

func (x *Feature) GetClientConfigurable() bool {
	if x != nil {
		return x.ClientConfigurable
	}
	return false
}

func (x *Feature) GetAvailableUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.AvailableUntil
	}
	return nil
}

// *
// Defines a requirement that must be satisfied to use a feature.
// Requirements can be optional, required, or prohibited.
type FeatureRequirement struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this requirement
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The value of this requirement, which can contain various data types
	Value *core.DynamicValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Enforcement level for this requirement
	PolicyStatus PolicyStatus `protobuf:"varint,3,opt,name=policy_status,json=policyStatus,proto3,enum=kurrentdb.protocol.v2.PolicyStatus" json:"policy_status,omitempty"`
	// Human-readable description of the requirement
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// Message shown when the requirement is violated
	ViolationMessage *string `protobuf:"bytes,5,opt,name=violation_message,json=violationMessage,proto3,oneof" json:"violation_message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FeatureRequirement) Reset() {
	*x = FeatureRequirement{}
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureRequirement) ProtoMessage() {}

func (x *FeatureRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_features_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureRequirement.ProtoReflect.Descriptor instead.
func (*FeatureRequirement) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP(), []int{6}
}

func (x *FeatureRequirement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FeatureRequirement) GetValue() *core.DynamicValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FeatureRequirement) GetPolicyStatus() PolicyStatus {
	if x != nil {
		return x.PolicyStatus
	}
	return PolicyStatus_OPTIONAL
}

func (x *FeatureRequirement) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FeatureRequirement) GetViolationMessage() string {
	if x != nil && x.ViolationMessage != nil {
		return *x.ViolationMessage
	}
	return ""
}

var File_kurrentdb_protocols_v2_features_service_proto protoreflect.FileDescriptor

const file_kurrentdb_protocols_v2_features_service_proto_rawDesc = "" +
	"\n" +
	"-kurrentdb/protocols/v2/features/service.proto\x12\x15kurrentdb.protocol.v2\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!kurrentdb/protocols/v2/core.proto\"\x9c\x01\n" +
	"\x0eServerMetadata\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x14\n" +
	"\x05build\x18\x02 \x01(\tR\x05build\x12A\n" +
	"\x1dmin_compatible_client_version\x18\x03 \x01(\tR\x1aminCompatibleClientVersion\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\"W\n" +
	"\x11ServerInfoRequest\x12%\n" +
	"\x0eclient_version\x18\x01 \x01(\tR\rclientVersion\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\"K\n" +
	"\x12ServerInfoResponse\x125\n" +
	"\x04info\x18\x01 \x01(\v2!.kurrentdb.protocol.v2.ServerInfoR\x04info\"\xfe\x01\n" +
	"\n" +
	"ServerInfo\x12A\n" +
	"\bmetadata\x18\x01 \x01(\v2%.kurrentdb.protocol.v2.ServerMetadataR\bmetadata\x12K\n" +
	"\bfeatures\x18\x02 \x03(\v2/.kurrentdb.protocol.v2.ServerInfo.FeaturesEntryR\bfeatures\x1a`\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.kurrentdb.protocol.v2.FeaturesListR\x05value:\x028\x01\"J\n" +
	"\fFeaturesList\x12:\n" +
	"\bfeatures\x18\x01 \x03(\v2\x1e.kurrentdb.protocol.v2.FeatureR\bfeatures\"\xec\x02\n" +
	"\aFeature\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\vdescription\x18\x02 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x1e\n" +
	"\n" +
	"deprecated\x18\x04 \x01(\bR\n" +
	"deprecated\x12M\n" +
	"\frequirements\x18\x05 \x03(\v2).kurrentdb.protocol.v2.FeatureRequirementR\frequirements\x12/\n" +
	"\x13client_configurable\x18\x06 \x01(\bR\x12clientConfigurable\x12H\n" +
	"\x0favailable_until\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x01R\x0eavailableUntil\x88\x01\x01B\x0e\n" +
	"\f_descriptionB\x12\n" +
	"\x10_available_until\"\xa9\x02\n" +
	"\x12FeatureRequirement\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .kurrentdb.protocol.DynamicValueR\x05value\x12H\n" +
	"\rpolicy_status\x18\x03 \x01(\x0e2#.kurrentdb.protocol.v2.PolicyStatusR\fpolicyStatus\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x00R\vdescription\x88\x01\x01\x120\n" +
	"\x11violation_message\x18\x05 \x01(\tH\x01R\x10violationMessage\x88\x01\x01B\x0e\n" +
	"\f_descriptionB\x14\n" +
	"\x12_violation_message*:\n" +
	"\fPolicyStatus\x12\f\n" +
	"\bOPTIONAL\x10\x00\x12\f\n" +
	"\bREQUIRED\x10\x03\x12\x0e\n" +
	"\n" +
	"PROHIBITED\x10\x042{\n" +
	"\x11ServerInfoService\x12f\n" +
	"\rGetServerInfo\x12(.kurrentdb.protocol.v2.ServerInfoRequest\x1a).kurrentdb.protocol.v2.ServerInfoResponse\"\x00B\x9f\x01\n" +
	"!io.kurrentdb.protocol.features.v2P\x01ZWgithub.com/kurrent-io/KurrentDB-Client-Go/protos/kurrentdb/protocols/v2/service;service\xaa\x02\x1eKurrentDB.Protocol.Features.V2b\x06proto3"

var (
	file_kurrentdb_protocols_v2_features_service_proto_rawDescOnce sync.Once
	file_kurrentdb_protocols_v2_features_service_proto_rawDescData []byte
)

func file_kurrentdb_protocols_v2_features_service_proto_rawDescGZIP() []byte {
	file_kurrentdb_protocols_v2_features_service_proto_rawDescOnce.Do(func() {
		file_kurrentdb_protocols_v2_features_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v2_features_service_proto_rawDesc), len(file_kurrentdb_protocols_v2_features_service_proto_rawDesc)))
	})
	return file_kurrentdb_protocols_v2_features_service_proto_rawDescData
}

var file_kurrentdb_protocols_v2_features_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kurrentdb_protocols_v2_features_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_kurrentdb_protocols_v2_features_service_proto_goTypes = []any{
	(PolicyStatus)(0),             // 0: kurrentdb.protocol.v2.PolicyStatus
	(*ServerMetadata)(nil),        // 1: kurrentdb.protocol.v2.ServerMetadata
	(*ServerInfoRequest)(nil),     // 2: kurrentdb.protocol.v2.ServerInfoRequest
	(*ServerInfoResponse)(nil),    // 3: kurrentdb.protocol.v2.ServerInfoResponse
	(*ServerInfo)(nil),            // 4: kurrentdb.protocol.v2.ServerInfo
	(*FeaturesList)(nil),          // 5: kurrentdb.protocol.v2.FeaturesList
	(*Feature)(nil),               // 6: kurrentdb.protocol.v2.Feature
	(*FeatureRequirement)(nil),    // 7: kurrentdb.protocol.v2.FeatureRequirement
	nil,                           // 8: kurrentdb.protocol.v2.ServerInfo.FeaturesEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*core.DynamicValue)(nil),     // 10: kurrentdb.protocol.DynamicValue
}
var file_kurrentdb_protocols_v2_features_service_proto_depIdxs = []int32{
	4,  // 0: kurrentdb.protocol.v2.ServerInfoResponse.info:type_name -> kurrentdb.protocol.v2.ServerInfo
	1,  // 1: kurrentdb.protocol.v2.ServerInfo.metadata:type_name -> kurrentdb.protocol.v2.ServerMetadata
	8,  // 2: kurrentdb.protocol.v2.ServerInfo.features:type_name -> kurrentdb.protocol.v2.ServerInfo.FeaturesEntry
	6,  // 3: kurrentdb.protocol.v2.FeaturesList.features:type_name -> kurrentdb.protocol.v2.Feature
	7,  // 4: kurrentdb.protocol.v2.Feature.requirements:type_name -> kurrentdb.protocol.v2.FeatureRequirement
	9,  // 5: kurrentdb.protocol.v2.Feature.available_until:type_name -> google.protobuf.Timestamp
	10, // 6: kurrentdb.protocol.v2.FeatureRequirement.value:type_name -> kurrentdb.protocol.DynamicValue
	0,  // 7: kurrentdb.protocol.v2.FeatureRequirement.policy_status:type_name -> kurrentdb.protocol.v2.PolicyStatus
	5,  // 8: kurrentdb.protocol.v2.ServerInfo.FeaturesEntry.value:type_name -> kurrentdb.protocol.v2.FeaturesList
	2,  // 9: kurrentdb.protocol.v2.ServerInfoService.GetServerInfo:input_type -> kurrentdb.protocol.v2.ServerInfoRequest
	3,  // 10: kurrentdb.protocol.v2.ServerInfoService.GetServerInfo:output_type -> kurrentdb.protocol.v2.ServerInfoResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_kurrentdb_protocols_v2_features_service_proto_init() }
func file_kurrentdb_protocols_v2_features_service_proto_init() {
	if File_kurrentdb_protocols_v2_features_service_proto != nil {
		return
	}
	file_kurrentdb_protocols_v2_features_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_kurrentdb_protocols_v2_features_service_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v2_features_service_proto_rawDesc), len(file_kurrentdb_protocols_v2_features_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kurrentdb_protocols_v2_features_service_proto_goTypes,
		DependencyIndexes: file_kurrentdb_protocols_v2_features_service_proto_depIdxs,
		EnumInfos:         file_kurrentdb_protocols_v2_features_service_proto_enumTypes,
		MessageInfos:      file_kurrentdb_protocols_v2_features_service_proto_msgTypes,
	}.Build()
	File_kurrentdb_protocols_v2_features_service_proto = out.File
	file_kurrentdb_protocols_v2_features_service_proto_goTypes = nil
	file_kurrentdb_protocols_v2_features_service_proto_depIdxs = nil
}
