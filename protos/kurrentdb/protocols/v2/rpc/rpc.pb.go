// ******************************************************************************************
// This protocol is UNSTABLE in the sense of being subject to change.
// ******************************************************************************************

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.26.0
// source: kurrentdb/protocols/v2/rpc.proto

package rpc

import (
	code "google.golang.org/genproto/googleapis/rpc/code"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorMetadata provides actionable information for error enum values to enable automated
// code generation, documentation, and consistent error handling across the Kurrent platform.
//
// It was modeled to support a single details type per error code to simplify code generation and
// validation. If multiple detail types are needed for a single error code, consider defining
// separate error codes for each detail type. Or, use a union type (oneof) in the detail message
// to encapsulate multiple detail variants within a single detail message.
//
// More however DebugInfo and RetryInfo can and should be added to any error regardless of
// this setting, when applicable.
//
// This annotation is applied to enum values using the google.protobuf.EnumValueOptions
// extension mechanism. It enables:
// - Automatic gRPC status code mapping
// - Code generation for error handling utilities
// - Documentation generation
// - Type-safe error detail validation
//
// Usage Example:
//
//	enum StreamErrorCode {
//	  REVISION_CONFLICT = 5 [(kurrent.rpc.error) = {
//	    status_code: FAILED_PRECONDITION,
//	    has_details: true
//	  }];
//	}
//
// See individual field documentation for conventions and defaults.
type ErrorMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maps the error to a standard gRPC status code for transport-level compatibility.
	// This field is REQUIRED for every error annotation.
	//
	// Use standard gRPC status codes from `google.rpc.code`.
	//
	// Code generators use this to:
	// - Map errors to gRPC status codes automatically
	// - Generate HTTP status code mappings
	// - Create transport-agnostic error handling
	StatusCode code.Code `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=google.rpc.Code" json:"status_code,omitempty"`
	// Indicates whether this error supports rich, typed detail messages.
	// Defaults to false (simple message string only).
	// The message type name must be derived from the enum name by convention.
	// Mask: {EnumValue}ErrorDetails
	//
	// Examples:
	//
	//	ACCESS_DENIED    -> "AccessDeniedErrorDetails"
	//	SERVER_NOT_READY -> "ServerNotReadyErrorDetails"
	//
	// Code generators use the message type name to:
	// - Validate that the detail message matches the expected type
	// - Generate type-safe error handling code
	// - Create accurate documentation
	HasDetails    bool `protobuf:"varint,2,opt,name=has_details,json=hasDetails,proto3" json:"has_details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMetadata) Reset() {
	*x = ErrorMetadata{}
	mi := &file_kurrentdb_protocols_v2_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMetadata) ProtoMessage() {}

func (x *ErrorMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMetadata.ProtoReflect.Descriptor instead.
func (*ErrorMetadata) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorMetadata) GetStatusCode() code.Code {
	if x != nil {
		return x.StatusCode
	}
	return code.Code(0)
}

func (x *ErrorMetadata) GetHasDetails() bool {
	if x != nil {
		return x.HasDetails
	}
	return false
}

// The top-level error message that must be returned by any service or operation
// in the Kurrent platform.
type RequestErrorInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The code must match one of the defined enum error codes from the module
	// where the error originated from.
	// A machine-readable error code that indicates the specific error condition.
	// This should be at most 63 characters and match a regular expression of
	// `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents UPPER_SNAKE_CASE.
	// By convention, it will be generated from the enum value name if not
	// explicitly specified.
	// Conventions:
	// - Prefix with the service name or domain to avoid collisions
	// - Use UPPER_SNAKE_CASE with only letters, numbers, and underscores
	// - Avoid redundant information (e.g., do not include "ERROR" suffix)
	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestErrorInfo) Reset() {
	*x = RequestErrorInfo{}
	mi := &file_kurrentdb_protocols_v2_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestErrorInfo) ProtoMessage() {}

func (x *RequestErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kurrentdb_protocols_v2_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestErrorInfo.ProtoReflect.Descriptor instead.
func (*RequestErrorInfo) Descriptor() ([]byte, []int) {
	return file_kurrentdb_protocols_v2_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *RequestErrorInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var file_kurrentdb_protocols_v2_rpc_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*ErrorMetadata)(nil),
		Field:         50000,
		Name:          "kurrent.rpc.error",
		Tag:           "bytes,50000,opt,name=error",
		Filename:      "kurrentdb/protocols/v2/rpc.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// Provides additional information about error conditions for automated
	// code generation and documentation.
	//
	// optional kurrent.rpc.ErrorMetadata error = 50000;
	E_Error = &file_kurrentdb_protocols_v2_rpc_proto_extTypes[0]
)

var File_kurrentdb_protocols_v2_rpc_proto protoreflect.FileDescriptor

const file_kurrentdb_protocols_v2_rpc_proto_rawDesc = "" +
	"\n" +
	" kurrentdb/protocols/v2/rpc.proto\x12\vkurrent.rpc\x1a google/protobuf/descriptor.proto\x1a!kurrentdb/protocols/v1/code.proto\"c\n" +
	"\rErrorMetadata\x121\n" +
	"\vstatus_code\x18\x01 \x01(\x0e2\x10.google.rpc.CodeR\n" +
	"statusCode\x12\x1f\n" +
	"\vhas_details\x18\x02 \x01(\bR\n" +
	"hasDetails\"&\n" +
	"\x10RequestErrorInfo\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code:X\n" +
	"\x05error\x12!.google.protobuf.EnumValueOptions\x18Ð†\x03 \x01(\v2\x1a.kurrent.rpc.ErrorMetadataR\x05error\x88\x01\x01Bm\n" +
	"\x0eio.kurrent.rpcP\x01ZKgithub.com/kurrent-io/KurrentDB-Client-Go/protos/kurrentdb/protocols/v2/rpc\xaa\x02\vKurrent.Rpcb\x06proto3"

var (
	file_kurrentdb_protocols_v2_rpc_proto_rawDescOnce sync.Once
	file_kurrentdb_protocols_v2_rpc_proto_rawDescData []byte
)

func file_kurrentdb_protocols_v2_rpc_proto_rawDescGZIP() []byte {
	file_kurrentdb_protocols_v2_rpc_proto_rawDescOnce.Do(func() {
		file_kurrentdb_protocols_v2_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v2_rpc_proto_rawDesc), len(file_kurrentdb_protocols_v2_rpc_proto_rawDesc)))
	})
	return file_kurrentdb_protocols_v2_rpc_proto_rawDescData
}

var file_kurrentdb_protocols_v2_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kurrentdb_protocols_v2_rpc_proto_goTypes = []any{
	(*ErrorMetadata)(nil),                 // 0: kurrent.rpc.ErrorMetadata
	(*RequestErrorInfo)(nil),              // 1: kurrent.rpc.RequestErrorInfo
	(code.Code)(0),                        // 2: google.rpc.Code
	(*descriptorpb.EnumValueOptions)(nil), // 3: google.protobuf.EnumValueOptions
}
var file_kurrentdb_protocols_v2_rpc_proto_depIdxs = []int32{
	2, // 0: kurrent.rpc.ErrorMetadata.status_code:type_name -> google.rpc.Code
	3, // 1: kurrent.rpc.error:extendee -> google.protobuf.EnumValueOptions
	0, // 2: kurrent.rpc.error:type_name -> kurrent.rpc.ErrorMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	2, // [2:3] is the sub-list for extension type_name
	1, // [1:2] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kurrentdb_protocols_v2_rpc_proto_init() }
func file_kurrentdb_protocols_v2_rpc_proto_init() {
	if File_kurrentdb_protocols_v2_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kurrentdb_protocols_v2_rpc_proto_rawDesc), len(file_kurrentdb_protocols_v2_rpc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_kurrentdb_protocols_v2_rpc_proto_goTypes,
		DependencyIndexes: file_kurrentdb_protocols_v2_rpc_proto_depIdxs,
		MessageInfos:      file_kurrentdb_protocols_v2_rpc_proto_msgTypes,
		ExtensionInfos:    file_kurrentdb_protocols_v2_rpc_proto_extTypes,
	}.Build()
	File_kurrentdb_protocols_v2_rpc_proto = out.File
	file_kurrentdb_protocols_v2_rpc_proto_goTypes = nil
	file_kurrentdb_protocols_v2_rpc_proto_depIdxs = nil
}
